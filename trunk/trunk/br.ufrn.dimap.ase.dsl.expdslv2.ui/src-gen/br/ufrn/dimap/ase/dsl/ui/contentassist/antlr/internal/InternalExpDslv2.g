/*
* generated by Xtext
*/
grammar InternalExpDslv2;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package br.ufrn.dimap.ase.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.ufrn.dimap.ase.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import br.ufrn.dimap.ase.dsl.services.ExpDslv2GrammarAccess;

}

@parser::members {
 
 	private ExpDslv2GrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ExpDslv2GrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
(rule__Model__ElementsAssignment)*
{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExperimentElement
entryRuleExperimentElement 
:
{ before(grammarAccess.getExperimentElementRule()); }
	 ruleExperimentElement
{ after(grammarAccess.getExperimentElementRule()); } 
	 EOF 
;

// Rule ExperimentElement
ruleExperimentElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExperimentElementAccess().getGroup()); }
(rule__ExperimentElement__Group__0)
{ after(grammarAccess.getExperimentElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExperimentalPlan
entryRuleExperimentalPlan 
:
{ before(grammarAccess.getExperimentalPlanRule()); }
	 ruleExperimentalPlan
{ after(grammarAccess.getExperimentalPlanRule()); } 
	 EOF 
;

// Rule ExperimentalPlan
ruleExperimentalPlan
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExperimentalPlanAccess().getGroup()); }
(rule__ExperimentalPlan__Group__0)
{ after(grammarAccess.getExperimentalPlanAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGoal
entryRuleGoal 
:
{ before(grammarAccess.getGoalRule()); }
	 ruleGoal
{ after(grammarAccess.getGoalRule()); } 
	 EOF 
;

// Rule Goal
ruleGoal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGoalAccess().getGroup()); }
(rule__Goal__Group__0)
{ after(grammarAccess.getGoalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHypotheses
entryRuleHypotheses 
:
{ before(grammarAccess.getHypothesesRule()); }
	 ruleHypotheses
{ after(grammarAccess.getHypothesesRule()); } 
	 EOF 
;

// Rule Hypotheses
ruleHypotheses
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHypothesesAccess().getAlternatives()); }
(rule__Hypotheses__Alternatives)
{ after(grammarAccess.getHypothesesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDependentVariable
entryRuleDependentVariable 
:
{ before(grammarAccess.getDependentVariableRule()); }
	 ruleDependentVariable
{ after(grammarAccess.getDependentVariableRule()); } 
	 EOF 
;

// Rule DependentVariable
ruleDependentVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDependentVariableAccess().getGroup()); }
(rule__DependentVariable__Group__0)
{ after(grammarAccess.getDependentVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFactor
entryRuleFactor 
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFactorAccess().getGroup()); }
(rule__Factor__Group__0)
{ after(grammarAccess.getFactorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLevels
entryRuleLevels 
:
{ before(grammarAccess.getLevelsRule()); }
	 ruleLevels
{ after(grammarAccess.getLevelsRule()); } 
	 EOF 
;

// Rule Levels
ruleLevels
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLevelsAccess().getNameAssignment()); }
(rule__Levels__NameAssignment)
{ after(grammarAccess.getLevelsAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcess
entryRuleProcess 
:
{ before(grammarAccess.getProcessRule()); }
	 ruleProcess
{ after(grammarAccess.getProcessRule()); } 
	 EOF 
;

// Rule Process
ruleProcess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcessAccess().getGroup()); }
(rule__Process__Group__0)
{ after(grammarAccess.getProcessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTask
entryRuleTask 
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskAccess().getGroup()); }
(rule__Task__Group__0)
{ after(grammarAccess.getTaskAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArtefact
entryRuleArtefact 
:
{ before(grammarAccess.getArtefactRule()); }
	 ruleArtefact
{ after(grammarAccess.getArtefactRule()); } 
	 EOF 
;

// Rule Artefact
ruleArtefact
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArtefactAccess().getGroup()); }
(rule__Artefact__Group__0)
{ after(grammarAccess.getArtefactAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetrics
entryRuleMetrics 
:
{ before(grammarAccess.getMetricsRule()); }
	 ruleMetrics
{ after(grammarAccess.getMetricsRule()); } 
	 EOF 
;

// Rule Metrics
ruleMetrics
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetricsAccess().getGroup()); }
(rule__Metrics__Group__0)
{ after(grammarAccess.getMetricsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDetail
entryRuleDetail 
:
{ before(grammarAccess.getDetailRule()); }
	 ruleDetail
{ after(grammarAccess.getDetailRule()); } 
	 EOF 
;

// Rule Detail
ruleDetail
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDetailAccess().getAlternatives()); }
(rule__Detail__Alternatives)
{ after(grammarAccess.getDetailAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaskMetric
entryRuleTaskMetric 
:
{ before(grammarAccess.getTaskMetricRule()); }
	 ruleTaskMetric
{ after(grammarAccess.getTaskMetricRule()); } 
	 EOF 
;

// Rule TaskMetric
ruleTaskMetric
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskMetricAccess().getGroup()); }
(rule__TaskMetric__Group__0)
{ after(grammarAccess.getTaskMetricAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataMetric
entryRuleDataMetric 
:
{ before(grammarAccess.getDataMetricRule()); }
	 ruleDataMetric
{ after(grammarAccess.getDataMetricRule()); } 
	 EOF 
;

// Rule DataMetric
ruleDataMetric
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataMetricAccess().getGroup()); }
(rule__DataMetric__Group__0)
{ after(grammarAccess.getDataMetricAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectedData
entryRuleCollectedData 
:
{ before(grammarAccess.getCollectedDataRule()); }
	 ruleCollectedData
{ after(grammarAccess.getCollectedDataRule()); } 
	 EOF 
;

// Rule CollectedData
ruleCollectedData
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectedDataAccess().getNameAssignment()); }
(rule__CollectedData__NameAssignment)
{ after(grammarAccess.getCollectedDataAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuestionnaire
entryRuleQuestionnaire 
:
{ before(grammarAccess.getQuestionnaireRule()); }
	 ruleQuestionnaire
{ after(grammarAccess.getQuestionnaireRule()); } 
	 EOF 
;

// Rule Questionnaire
ruleQuestionnaire
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionnaireAccess().getGroup()); }
(rule__Questionnaire__Group__0)
{ after(grammarAccess.getQuestionnaireAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuestion
entryRuleQuestion 
:
{ before(grammarAccess.getQuestionRule()); }
	 ruleQuestion
{ after(grammarAccess.getQuestionRule()); } 
	 EOF 
;

// Rule Question
ruleQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionAccess().getGroup()); }
(rule__Question__Group__0)
{ after(grammarAccess.getQuestionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlternatives
entryRuleAlternatives 
:
{ before(grammarAccess.getAlternativesRule()); }
	 ruleAlternatives
{ after(grammarAccess.getAlternativesRule()); } 
	 EOF 
;

// Rule Alternatives
ruleAlternatives
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlternativesAccess().getGroup()); }
(rule__Alternatives__Group__0)
{ after(grammarAccess.getAlternativesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule RelationType
ruleRelationType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getAlternatives()); }
(rule__RelationType__Alternatives)
{ after(grammarAccess.getRelationTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OperatorType
ruleOperatorType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorTypeAccess().getAlternatives()); }
(rule__OperatorType__Alternatives)
{ after(grammarAccess.getOperatorTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule HypothesisType
ruleHypothesisType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesisTypeAccess().getAlternatives()); }
(rule__HypothesisType__Alternatives)
{ after(grammarAccess.getHypothesisTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DesignType
ruleDesignType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignTypeAccess().getAlternatives()); }
(rule__DesignType__Alternatives)
{ after(grammarAccess.getDesignTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AnalysisTechiqueType
ruleAnalysisTechiqueType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getAlternatives()); }
(rule__AnalysisTechiqueType__Alternatives)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule RoleType
ruleRoleType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleTypeAccess().getAlternatives()); }
(rule__RoleType__Alternatives)
{ after(grammarAccess.getRoleTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ArtefactType
ruleArtefactType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtefactTypeAccess().getAlternatives()); }
(rule__ArtefactType__Alternatives)
{ after(grammarAccess.getArtefactTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule QuestionnaireType
ruleQuestionnaireType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireTypeAccess().getAlternatives()); }
(rule__QuestionnaireType__Alternatives)
{ after(grammarAccess.getQuestionnaireTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AnswerType
ruleAnswerType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerTypeAccess().getAlternatives()); }
(rule__AnswerType__Alternatives)
{ after(grammarAccess.getAnswerTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Hypotheses__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getGroup_0()); }
(rule__Hypotheses__Group_0__0)
{ after(grammarAccess.getHypothesesAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getHypothesesAccess().getGroup_1()); }
(rule__Hypotheses__Group_1__0)
{ after(grammarAccess.getHypothesesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__IsDesiredVariationAlternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getIsDesiredVariationTrueKeyword_3_0_0()); }

	'True' 

{ after(grammarAccess.getFactorAccess().getIsDesiredVariationTrueKeyword_3_0_0()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getIsDesiredVariationFalseKeyword_3_0_1()); }

	'False' 

{ after(grammarAccess.getFactorAccess().getIsDesiredVariationFalseKeyword_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Detail__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailAccess().getTaskMetricParserRuleCall_0()); }
	ruleTaskMetric
{ after(grammarAccess.getDetailAccess().getTaskMetricParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDetailAccess().getDataMetricParserRuleCall_1()); }
	ruleDataMetric
{ after(grammarAccess.getDetailAccess().getDataMetricParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getIsRelatedEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getRelationTypeAccess().getIsRelatedEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getIsNotRelatedEnumLiteralDeclaration_1()); }
(	'<>' 
)
{ after(grammarAccess.getRelationTypeAccess().getIsNotRelatedEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorTypeAccess().getEqualEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getOperatorTypeAccess().getEqualEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOperatorTypeAccess().getDifferentEnumLiteralDeclaration_1()); }
(	'!=' 
)
{ after(grammarAccess.getOperatorTypeAccess().getDifferentEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOperatorTypeAccess().getMoreEnumLiteralDeclaration_2()); }
(	'>' 
)
{ after(grammarAccess.getOperatorTypeAccess().getMoreEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getOperatorTypeAccess().getLessEnumLiteralDeclaration_3()); }
(	'<' 
)
{ after(grammarAccess.getOperatorTypeAccess().getLessEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getOperatorTypeAccess().getMoreEqualEnumLiteralDeclaration_4()); }
(	'>=' 
)
{ after(grammarAccess.getOperatorTypeAccess().getMoreEqualEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getOperatorTypeAccess().getLessEqualEnumLiteralDeclaration_5()); }
(	'<=' 
)
{ after(grammarAccess.getOperatorTypeAccess().getLessEqualEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HypothesisType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesisTypeAccess().getNull_EnumLiteralDeclaration_0()); }
(	'null_' 
)
{ after(grammarAccess.getHypothesisTypeAccess().getNull_EnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getHypothesisTypeAccess().getAlternativeEnumLiteralDeclaration_1()); }
(	'alternative' 
)
{ after(grammarAccess.getHypothesisTypeAccess().getAlternativeEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DesignType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignTypeAccess().getCDREnumLiteralDeclaration_0()); }
(	'CRD - Completely Randomized Design' 
)
{ after(grammarAccess.getDesignTypeAccess().getCDREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDesignTypeAccess().getRCBDEnumLiteralDeclaration_1()); }
(	'RCBD - Randomized Complete Block Design' 
)
{ after(grammarAccess.getDesignTypeAccess().getRCBDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getDesignTypeAccess().getLSEnumLiteralDeclaration_2()); }
(	'LS - Latin Square' 
)
{ after(grammarAccess.getDesignTypeAccess().getLSEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getDesignTypeAccess().getOtherEnumLiteralDeclaration_3()); }
(	'Other' 
)
{ after(grammarAccess.getDesignTypeAccess().getOtherEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisTechiqueType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getChi2EnumLiteralDeclaration_0()); }
(	'Chi-2' 
)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getChi2EnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getBinomialTestEnumLiteralDeclaration_1()); }
(	'Binomial Test' 
)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getBinomialTestEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getTTestEnumLiteralDeclaration_2()); }
(	't-test' 
)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getTTestEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getFTestEnumLiteralDeclaration_3()); }
(	'F-test' 
)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getFTestEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getMcNemarTestEnumLiteralDeclaration_4()); }
(	'McNemar Test' 
)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getMcNemarTestEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getMannWhitneyEnumLiteralDeclaration_5()); }
(	'Mann-Whitney' 
)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getMannWhitneyEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getPairedEnumLiteralDeclaration_6()); }
(	'Paired t-test' 
)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getPairedEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getWilcoxonEnumLiteralDeclaration_7()); }
(	'Wilcoxon' 
)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getWilcoxonEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getSignTestEnumLiteralDeclaration_8()); }
(	'Sign test' 
)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getSignTestEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getAnovaEnumLiteralDeclaration_9()); }
(	'ANOVA' 
)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getAnovaEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getKruskalWallisEnumLiteralDeclaration_10()); }
(	'Kruskal-Wallis' 
)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getKruskalWallisEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getAnalysisTechiqueTypeAccess().getOthersEnumLiteralDeclaration_11()); }
(	'Others' 
)
{ after(grammarAccess.getAnalysisTechiqueTypeAccess().getOthersEnumLiteralDeclaration_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RoleType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleTypeAccess().getParticipantEnumLiteralDeclaration_0()); }
(	'Participant' 
)
{ after(grammarAccess.getRoleTypeAccess().getParticipantEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRoleTypeAccess().getResearcherEnumLiteralDeclaration_1()); }
(	'Researcher' 
)
{ after(grammarAccess.getRoleTypeAccess().getResearcherEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtefactType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtefactTypeAccess().getIn_EnumLiteralDeclaration_0()); }
(	'input' 
)
{ after(grammarAccess.getArtefactTypeAccess().getIn_EnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getArtefactTypeAccess().getOut_EnumLiteralDeclaration_1()); }
(	'output' 
)
{ after(grammarAccess.getArtefactTypeAccess().getOut_EnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getArtefactTypeAccess().getInout_EnumLiteralDeclaration_2()); }
(	'inoutput' 
)
{ after(grammarAccess.getArtefactTypeAccess().getInout_EnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNumEnumLiteralDeclaration_0()); }
(	'number' 
)
{ after(grammarAccess.getDataTypeAccess().getNumEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getTextEnumLiteralDeclaration_1()); }
(	'text' 
)
{ after(grammarAccess.getDataTypeAccess().getTextEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionnaireType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireTypeAccess().getPreEnumLiteralDeclaration_0()); }
(	'Pre' 
)
{ after(grammarAccess.getQuestionnaireTypeAccess().getPreEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getQuestionnaireTypeAccess().getPostEnumLiteralDeclaration_1()); }
(	'Post' 
)
{ after(grammarAccess.getQuestionnaireTypeAccess().getPostEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnswerType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerTypeAccess().getTextEnumLiteralDeclaration_0()); }
(	'Text' 
)
{ after(grammarAccess.getAnswerTypeAccess().getTextEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAnswerTypeAccess().getParagraphTextEnumLiteralDeclaration_1()); }
(	'ParagraphText' 
)
{ after(grammarAccess.getAnswerTypeAccess().getParagraphTextEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAnswerTypeAccess().getMultipleChoiceEnumLiteralDeclaration_2()); }
(	'MultipleChoice' 
)
{ after(grammarAccess.getAnswerTypeAccess().getMultipleChoiceEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getAnswerTypeAccess().getSingleChoiceEnumLiteralDeclaration_3()); }
(	'SingleChoice' 
)
{ after(grammarAccess.getAnswerTypeAccess().getSingleChoiceEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getAnswerTypeAccess().getScaleEnumLiteralDeclaration_4()); }
(	'Scale' 
)
{ after(grammarAccess.getAnswerTypeAccess().getScaleEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getAnswerTypeAccess().getGridEnumLiteralDeclaration_5()); }
(	'Grid' 
)
{ after(grammarAccess.getAnswerTypeAccess().getGridEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ExperimentElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentElement__Group__0__Impl
	rule__ExperimentElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getExperimentKeyword_0()); }

	'Experiment' 

{ after(grammarAccess.getExperimentElementAccess().getExperimentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentElement__Group__1__Impl
	rule__ExperimentElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getNameAssignment_1()); }
(rule__ExperimentElement__NameAssignment_1)
{ after(grammarAccess.getExperimentElementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentElement__Group__2__Impl
	rule__ExperimentElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getGroup_2()); }
(rule__ExperimentElement__Group_2__0)
{ after(grammarAccess.getExperimentElementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentElement__Group__3__Impl
	rule__ExperimentElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getProcessAssignment_3()); }
(rule__ExperimentElement__ProcessAssignment_3)*
{ after(grammarAccess.getExperimentElementAccess().getProcessAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentElement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentElement__Group__4__Impl
	rule__ExperimentElement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getMetricsAssignment_4()); }
(rule__ExperimentElement__MetricsAssignment_4)*
{ after(grammarAccess.getExperimentElementAccess().getMetricsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentElement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentElement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getGroup_5()); }
(rule__ExperimentElement__Group_5__0)?
{ after(grammarAccess.getExperimentElementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ExperimentElement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentElement__Group_2__0__Impl
	rule__ExperimentElement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getExperimentalPlanKeyword_2_0()); }

	'Experimental Plan' 

{ after(grammarAccess.getExperimentElementAccess().getExperimentalPlanKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentElement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentElement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getExperimentsAssignment_2_1()); }
(rule__ExperimentElement__ExperimentsAssignment_2_1)*
{ after(grammarAccess.getExperimentElementAccess().getExperimentsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExperimentElement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentElement__Group_5__0__Impl
	rule__ExperimentElement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getQuestionnairesKeyword_5_0()); }

	'Questionnaires' 

{ after(grammarAccess.getExperimentElementAccess().getQuestionnairesKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentElement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentElement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getQuestionnaireAssignment_5_1()); }
(rule__ExperimentElement__QuestionnaireAssignment_5_1)*
{ after(grammarAccess.getExperimentElementAccess().getQuestionnaireAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExperimentalPlan__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__0__Impl
	rule__ExperimentalPlan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getGoalsKeyword_0()); }

	'Goals' 

{ after(grammarAccess.getExperimentalPlanAccess().getGoalsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__1__Impl
	rule__ExperimentalPlan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getExperimentalPlanAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__2__Impl
	rule__ExperimentalPlan__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getGoalAssignment_2()); }
(rule__ExperimentalPlan__GoalAssignment_2)*
{ after(grammarAccess.getExperimentalPlanAccess().getGoalAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__3__Impl
	rule__ExperimentalPlan__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getExperimentalPlanAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__4__Impl
	rule__ExperimentalPlan__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getDesignOfExperimentKeyword_4()); }

	'DesignOfExperiment' 

{ after(grammarAccess.getExperimentalPlanAccess().getDesignOfExperimentKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__5__Impl
	rule__ExperimentalPlan__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getEqualsSignKeyword_5()); }

	'=' 

{ after(grammarAccess.getExperimentalPlanAccess().getEqualsSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__6__Impl
	rule__ExperimentalPlan__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getTypeAssignment_6()); }
(rule__ExperimentalPlan__TypeAssignment_6)
{ after(grammarAccess.getExperimentalPlanAccess().getTypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__7__Impl
	rule__ExperimentalPlan__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getLeftCurlyBracketKeyword_7()); }

	'{' 

{ after(grammarAccess.getExperimentalPlanAccess().getLeftCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__8__Impl
	rule__ExperimentalPlan__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getParameterAssignment_8()); }
(rule__ExperimentalPlan__ParameterAssignment_8)*
{ after(grammarAccess.getExperimentalPlanAccess().getParameterAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__9__Impl
	rule__ExperimentalPlan__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getDependentVariableAssignment_9()); }
(rule__ExperimentalPlan__DependentVariableAssignment_9)*
{ after(grammarAccess.getExperimentalPlanAccess().getDependentVariableAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__10__Impl
	rule__ExperimentalPlan__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getFactorAssignment_10()); }
(rule__ExperimentalPlan__FactorAssignment_10)*
{ after(grammarAccess.getExperimentalPlanAccess().getFactorAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__11__Impl
	rule__ExperimentalPlan__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getStatisticalAnalysisTechniqueKeyword_11()); }

	'Statistical Analysis Technique' 

{ after(grammarAccess.getExperimentalPlanAccess().getStatisticalAnalysisTechniqueKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__12__Impl
	rule__ExperimentalPlan__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getGroup_12()); }
(rule__ExperimentalPlan__Group_12__0)*
{ after(grammarAccess.getExperimentalPlanAccess().getGroup_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__13__Impl
	rule__ExperimentalPlan__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getInternalReplicationKeyword_13()); }

	'Internal Replication ' 

{ after(grammarAccess.getExperimentalPlanAccess().getInternalReplicationKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__14__Impl
	rule__ExperimentalPlan__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getInternalReplicationAssignment_14()); }
(rule__ExperimentalPlan__InternalReplicationAssignment_14)
{ after(grammarAccess.getExperimentalPlanAccess().getInternalReplicationAssignment_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getRightCurlyBracketKeyword_15()); }

	'}' 

{ after(grammarAccess.getExperimentalPlanAccess().getRightCurlyBracketKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


































rule__ExperimentalPlan__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group_12__0__Impl
	rule__ExperimentalPlan__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getTohypothesesAssignment_12_0()); }
(rule__ExperimentalPlan__TohypothesesAssignment_12_0)*
{ after(grammarAccess.getExperimentalPlanAccess().getTohypothesesAssignment_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group_12__1__Impl
	rule__ExperimentalPlan__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getColonKeyword_12_1()); }

	':' 

{ after(grammarAccess.getExperimentalPlanAccess().getColonKeyword_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentalPlan__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExperimentalPlan__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getTechniqueAssignment_12_2()); }
(rule__ExperimentalPlan__TechniqueAssignment_12_2)*
{ after(grammarAccess.getExperimentalPlanAccess().getTechniqueAssignment_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Goal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goal__Group__0__Impl
	rule__Goal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getNameAssignment_0()); }
(rule__Goal__NameAssignment_0)
{ after(grammarAccess.getGoalAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goal__Group__1__Impl
	rule__Goal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getDescriptionAssignment_1()); }
(rule__Goal__DescriptionAssignment_1)
{ after(grammarAccess.getGoalAccess().getDescriptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goal__Group__2__Impl
	rule__Goal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getGoalAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goal__Group__3__Impl
	rule__Goal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getHypothesesAssignment_3()); }
(rule__Goal__HypothesesAssignment_3)*
{ after(grammarAccess.getGoalAccess().getHypothesesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goal__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getGoalAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Hypotheses__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_0__0__Impl
	rule__Hypotheses__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getNameAssignment_0_0()); }
(rule__Hypotheses__NameAssignment_0_0)
{ after(grammarAccess.getHypothesesAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_0__1__Impl
	rule__Hypotheses__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getDescriptionAssignment_0_1()); }
(rule__Hypotheses__DescriptionAssignment_0_1)?
{ after(grammarAccess.getHypothesesAccess().getDescriptionAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_0__2__Impl
	rule__Hypotheses__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getTypeAssignment_0_2()); }
(rule__Hypotheses__TypeAssignment_0_2)
{ after(grammarAccess.getHypothesesAccess().getTypeAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_0__3__Impl
	rule__Hypotheses__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getDependentVariableAssignment_0_3()); }
(rule__Hypotheses__DependentVariableAssignment_0_3)
{ after(grammarAccess.getHypothesesAccess().getDependentVariableAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_0__4__Impl
	rule__Hypotheses__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getLeftParenthesisKeyword_0_4()); }

	'(' 

{ after(grammarAccess.getHypothesesAccess().getLeftParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_0__5__Impl
	rule__Hypotheses__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getLevelsAssignment_0_5()); }
(rule__Hypotheses__LevelsAssignment_0_5)*
{ after(grammarAccess.getHypothesesAccess().getLevelsAssignment_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_0__6__Impl
	rule__Hypotheses__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getRightParenthesisKeyword_0_6()); }

	')' 

{ after(grammarAccess.getHypothesesAccess().getRightParenthesisKeyword_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_0__7__Impl
	rule__Hypotheses__Group_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getOperatorAssignment_0_7()); }
(rule__Hypotheses__OperatorAssignment_0_7)
{ after(grammarAccess.getHypothesesAccess().getOperatorAssignment_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_0__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_0__8__Impl
	rule__Hypotheses__Group_0__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_0__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getDependentVariableAssignment_0_8()); }
(rule__Hypotheses__DependentVariableAssignment_0_8)
{ after(grammarAccess.getHypothesesAccess().getDependentVariableAssignment_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_0__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_0__9__Impl
	rule__Hypotheses__Group_0__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_0__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getLeftParenthesisKeyword_0_9()); }

	'(' 

{ after(grammarAccess.getHypothesesAccess().getLeftParenthesisKeyword_0_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_0__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_0__10__Impl
	rule__Hypotheses__Group_0__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_0__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getLevelsAssignment_0_10()); }
(rule__Hypotheses__LevelsAssignment_0_10)*
{ after(grammarAccess.getHypothesesAccess().getLevelsAssignment_0_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_0__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_0__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_0__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getRightParenthesisKeyword_0_11()); }

	')' 

{ after(grammarAccess.getHypothesesAccess().getRightParenthesisKeyword_0_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__Hypotheses__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_1__0__Impl
	rule__Hypotheses__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getNameAssignment_1_0()); }
(rule__Hypotheses__NameAssignment_1_0)
{ after(grammarAccess.getHypothesesAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_1__1__Impl
	rule__Hypotheses__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getHypothesesAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_1__2__Impl
	rule__Hypotheses__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getDependentVariableAssignment_1_2()); }
(rule__Hypotheses__DependentVariableAssignment_1_2)
{ after(grammarAccess.getHypothesesAccess().getDependentVariableAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_1__3__Impl
	rule__Hypotheses__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getRelationAssignment_1_3()); }
(rule__Hypotheses__RelationAssignment_1_3)
{ after(grammarAccess.getHypothesesAccess().getRelationAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_1__4__Impl
	rule__Hypotheses__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getFactorAssignment_1_4()); }
(rule__Hypotheses__FactorAssignment_1_4)*
{ after(grammarAccess.getHypothesesAccess().getFactorAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hypotheses__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hypotheses__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getRightParenthesisKeyword_1_5()); }

	')' 

{ after(grammarAccess.getHypothesesAccess().getRightParenthesisKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParameterKeyword_0()); }

	'Parameter' 

{ after(grammarAccess.getParameterAccess().getParameterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getVariableAssignment_1()); }
(rule__Parameter__VariableAssignment_1)
{ after(grammarAccess.getParameterAccess().getVariableAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getParameterAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getValueAssignment_3()); }
(rule__Parameter__ValueAssignment_3)
{ after(grammarAccess.getParameterAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DependentVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DependentVariable__Group__0__Impl
	rule__DependentVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DependentVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependentVariableAccess().getDependentVariableKeyword_0()); }

	'Dependent Variable' 

{ after(grammarAccess.getDependentVariableAccess().getDependentVariableKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DependentVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DependentVariable__Group__1__Impl
	rule__DependentVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DependentVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependentVariableAccess().getNameAssignment_1()); }
(rule__DependentVariable__NameAssignment_1)
{ after(grammarAccess.getDependentVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DependentVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DependentVariable__Group__2__Impl
	rule__DependentVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DependentVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependentVariableAccess().getDescriptionAssignment_2()); }
(rule__DependentVariable__DescriptionAssignment_2)
{ after(grammarAccess.getDependentVariableAccess().getDescriptionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DependentVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DependentVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DependentVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependentVariableAccess().getMetricsAssignment_3()); }
(rule__DependentVariable__MetricsAssignment_3)*
{ after(grammarAccess.getDependentVariableAccess().getMetricsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Factor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getFactorKeyword_0()); }

	'Factor' 

{ after(grammarAccess.getFactorAccess().getFactorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group__1__Impl
	rule__Factor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getNameAssignment_1()); }
(rule__Factor__NameAssignment_1)
{ after(grammarAccess.getFactorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group__2__Impl
	rule__Factor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getIsDesiredVariationKeyword_2()); }

	'isDesiredVariation' 

{ after(grammarAccess.getFactorAccess().getIsDesiredVariationKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group__3__Impl
	rule__Factor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getIsDesiredVariationAssignment_3()); }
(rule__Factor__IsDesiredVariationAssignment_3)
{ after(grammarAccess.getFactorAccess().getIsDesiredVariationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getGroup_4()); }
(rule__Factor__Group_4__0)?
{ after(grammarAccess.getFactorAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Factor__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_4__0__Impl
	rule__Factor__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getLeftCurlyBracketKeyword_4_0()); }

	'{' 

{ after(grammarAccess.getFactorAccess().getLeftCurlyBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_4__1__Impl
	rule__Factor__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getLevelAssignment_4_1()); }
(rule__Factor__LevelAssignment_4_1)*
{ after(grammarAccess.getFactorAccess().getLevelAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getRightCurlyBracketKeyword_4_2()); }

	'}' 

{ after(grammarAccess.getFactorAccess().getRightCurlyBracketKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Process__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__0__Impl
	rule__Process__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getProcessKeyword_0()); }

	'Process' 

{ after(grammarAccess.getProcessAccess().getProcessKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__1__Impl
	rule__Process__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getNameAssignment_1()); }
(rule__Process__NameAssignment_1)
{ after(grammarAccess.getProcessAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__2__Impl
	rule__Process__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getGroup_2()); }
(rule__Process__Group_2__0)?
{ after(grammarAccess.getProcessAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__3__Impl
	rule__Process__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__4__Impl
	rule__Process__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getGroup_4()); }
(rule__Process__Group_4__0)?
{ after(grammarAccess.getProcessAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__5__Impl
	rule__Process__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getTaskAssignment_5()); }
(rule__Process__TaskAssignment_5)*
{ after(grammarAccess.getProcessAccess().getTaskAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Process__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group_2__0__Impl
	rule__Process__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getToKeyword_2_0()); }

	'to' 

{ after(grammarAccess.getProcessAccess().getToKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getTreatmentAssignment_2_1()); }
(rule__Process__TreatmentAssignment_2_1)*
{ after(grammarAccess.getProcessAccess().getTreatmentAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Process__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group_4__0__Impl
	rule__Process__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getRoleKeyword_4_0()); }

	'Role' 

{ after(grammarAccess.getProcessAccess().getRoleKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getRoleAssignment_4_1()); }
(rule__Process__RoleAssignment_4_1)*
{ after(grammarAccess.getProcessAccess().getRoleAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }

	'Task' 

{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNameAssignment_1()); }
(rule__Task__NameAssignment_1)
{ after(grammarAccess.getTaskAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getDescriptionKeyword_2()); }

	'description' 

{ after(grammarAccess.getTaskAccess().getDescriptionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getDescriptionAssignment_3()); }
(rule__Task__DescriptionAssignment_3)
{ after(grammarAccess.getTaskAccess().getDescriptionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_4()); }
(rule__Task__Group_4__0)?
{ after(grammarAccess.getTaskAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__5__Impl
	rule__Task__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_5()); }
(rule__Task__Group_5__0)?
{ after(grammarAccess.getTaskAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__6__Impl
	rule__Task__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__7__Impl
	rule__Task__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_7()); }
(rule__Task__Group_7__0)?
{ after(grammarAccess.getTaskAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__8__Impl
	rule__Task__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_8()); }
(rule__Task__Group_8__0)?
{ after(grammarAccess.getTaskAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__9__Impl
	rule__Task__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_9()); }
(rule__Task__Group_9__0)?
{ after(grammarAccess.getTaskAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Task__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_4__0__Impl
	rule__Task__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getToKeyword_4_0()); }

	'to' 

{ after(grammarAccess.getTaskAccess().getToKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNextAssignment_4_1()); }
(rule__Task__NextAssignment_4_1)*
{ after(grammarAccess.getTaskAccess().getNextAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_5__0__Impl
	rule__Task__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getRoleKeyword_5_0()); }

	'Role' 

{ after(grammarAccess.getTaskAccess().getRoleKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getRoleAssignment_5_1()); }
(rule__Task__RoleAssignment_5_1)*
{ after(grammarAccess.getTaskAccess().getRoleAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_7__0__Impl
	rule__Task__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getVarKeyword_7_0()); }

	'var' 

{ after(grammarAccess.getTaskAccess().getVarKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getCollectDataAssignment_7_1()); }
(rule__Task__CollectDataAssignment_7_1)*
{ after(grammarAccess.getTaskAccess().getCollectDataAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_8__0__Impl
	rule__Task__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getArtefactsKeyword_8_0()); }

	'artefacts' 

{ after(grammarAccess.getTaskAccess().getArtefactsKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getArtefactsAssignment_8_1()); }
(rule__Task__ArtefactsAssignment_8_1)*
{ after(grammarAccess.getTaskAccess().getArtefactsAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_9__0__Impl
	rule__Task__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getQuestKeyword_9_0()); }

	'quest' 

{ after(grammarAccess.getTaskAccess().getQuestKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getQuestionnaireAssignment_9_1()); }
(rule__Task__QuestionnaireAssignment_9_1)*
{ after(grammarAccess.getTaskAccess().getQuestionnaireAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Artefact__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Artefact__Group__0__Impl
	rule__Artefact__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Artefact__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtefactAccess().getNameAssignment_0()); }
(rule__Artefact__NameAssignment_0)
{ after(grammarAccess.getArtefactAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Artefact__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Artefact__Group__1__Impl
	rule__Artefact__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Artefact__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtefactAccess().getDescriptionKeyword_1()); }

	'description' 

{ after(grammarAccess.getArtefactAccess().getDescriptionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Artefact__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Artefact__Group__2__Impl
	rule__Artefact__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Artefact__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtefactAccess().getDescriptionAssignment_2()); }
(rule__Artefact__DescriptionAssignment_2)
{ after(grammarAccess.getArtefactAccess().getDescriptionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Artefact__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Artefact__Group__3__Impl
	rule__Artefact__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Artefact__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtefactAccess().getTypeKeyword_3()); }

	'type' 

{ after(grammarAccess.getArtefactAccess().getTypeKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Artefact__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Artefact__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Artefact__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtefactAccess().getTypeAssignment_4()); }
(rule__Artefact__TypeAssignment_4)
{ after(grammarAccess.getArtefactAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Metrics__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metrics__Group__0__Impl
	rule__Metrics__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getMetricKeyword_0()); }

	'Metric' 

{ after(grammarAccess.getMetricsAccess().getMetricKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metrics__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metrics__Group__1__Impl
	rule__Metrics__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getNameAssignment_1()); }
(rule__Metrics__NameAssignment_1)
{ after(grammarAccess.getMetricsAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metrics__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metrics__Group__2__Impl
	rule__Metrics__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getRelatesKeyword_2()); }

	'relates' 

{ after(grammarAccess.getMetricsAccess().getRelatesKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metrics__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metrics__Group__3__Impl
	rule__Metrics__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getRelatesToAssignment_3()); }
(rule__Metrics__RelatesToAssignment_3)
{ after(grammarAccess.getMetricsAccess().getRelatesToAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metrics__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metrics__Group__4__Impl
	rule__Metrics__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getMetricsAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metrics__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metrics__Group__5__Impl
	rule__Metrics__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getGroup_5()); }
(rule__Metrics__Group_5__0)
{ after(grammarAccess.getMetricsAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metrics__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metrics__Group__6__Impl
	rule__Metrics__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getDetailAssignment_6()); }
(rule__Metrics__DetailAssignment_6)
{ after(grammarAccess.getMetricsAccess().getDetailAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metrics__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metrics__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getMetricsAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Metrics__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metrics__Group_5__0__Impl
	rule__Metrics__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getDescriptionKeyword_5_0()); }

	'description' 

{ after(grammarAccess.getMetricsAccess().getDescriptionKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metrics__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metrics__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getDescriptionAssignment_5_1()); }
(rule__Metrics__DescriptionAssignment_5_1)
{ after(grammarAccess.getMetricsAccess().getDescriptionAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TaskMetric__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskMetric__Group__0__Impl
	rule__TaskMetric__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskMetric__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskMetricAccess().getTaskMetricAction_0()); }
(

)
{ after(grammarAccess.getTaskMetricAccess().getTaskMetricAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskMetric__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskMetric__Group__1__Impl
	rule__TaskMetric__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskMetric__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskMetricAccess().getGroup_1()); }
(rule__TaskMetric__Group_1__0)
{ after(grammarAccess.getTaskMetricAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskMetric__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskMetric__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskMetric__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskMetricAccess().getGroup_2()); }
(rule__TaskMetric__Group_2__0)?
{ after(grammarAccess.getTaskMetricAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TaskMetric__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskMetric__Group_1__0__Impl
	rule__TaskMetric__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskMetric__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskMetricAccess().getTaskBeginKeyword_1_0()); }

	'taskBegin' 

{ after(grammarAccess.getTaskMetricAccess().getTaskBeginKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskMetric__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskMetric__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskMetric__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskMetricAccess().getTaskBeginAssignment_1_1()); }
(rule__TaskMetric__TaskBeginAssignment_1_1)
{ after(grammarAccess.getTaskMetricAccess().getTaskBeginAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TaskMetric__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskMetric__Group_2__0__Impl
	rule__TaskMetric__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskMetric__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskMetricAccess().getTaskEndKeyword_2_0()); }

	'taskEnd' 

{ after(grammarAccess.getTaskMetricAccess().getTaskEndKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskMetric__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskMetric__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskMetric__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskMetricAccess().getTaskEndAssignment_2_1()); }
(rule__TaskMetric__TaskEndAssignment_2_1)
{ after(grammarAccess.getTaskMetricAccess().getTaskEndAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataMetric__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataMetric__Group__0__Impl
	rule__DataMetric__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getDataMetricAction_0()); }
(

)
{ after(grammarAccess.getDataMetricAccess().getDataMetricAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataMetric__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataMetric__Group__1__Impl
	rule__DataMetric__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getGroup_1()); }
(rule__DataMetric__Group_1__0)?
{ after(grammarAccess.getDataMetricAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataMetric__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataMetric__Group__2__Impl
	rule__DataMetric__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getGroup_2()); }
(rule__DataMetric__Group_2__0)?
{ after(grammarAccess.getDataMetricAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataMetric__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataMetric__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getGroup_3()); }
(rule__DataMetric__Group_3__0)?
{ after(grammarAccess.getDataMetricAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataMetric__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataMetric__Group_1__0__Impl
	rule__DataMetric__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getCollectedDataKeyword_1_0()); }

	'collectedData' 

{ after(grammarAccess.getDataMetricAccess().getCollectedDataKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataMetric__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataMetric__Group_1__1__Impl
	rule__DataMetric__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getCollectedDataAssignment_1_1()); }
(rule__DataMetric__CollectedDataAssignment_1_1)*
{ after(grammarAccess.getDataMetricAccess().getCollectedDataAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataMetric__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataMetric__Group_1__2__Impl
	rule__DataMetric__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getDataMetricAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataMetric__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataMetric__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getDataTypeAssignment_1_3()); }
(rule__DataMetric__DataTypeAssignment_1_3)
{ after(grammarAccess.getDataMetricAccess().getDataTypeAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataMetric__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataMetric__Group_2__0__Impl
	rule__DataMetric__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getArtefactKeyword_2_0()); }

	'artefact' 

{ after(grammarAccess.getDataMetricAccess().getArtefactKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataMetric__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataMetric__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getArtefactsAssignment_2_1()); }
(rule__DataMetric__ArtefactsAssignment_2_1)*
{ after(grammarAccess.getDataMetricAccess().getArtefactsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataMetric__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataMetric__Group_3__0__Impl
	rule__DataMetric__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getQuestKeyword_3_0()); }

	'quest' 

{ after(grammarAccess.getDataMetricAccess().getQuestKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataMetric__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataMetric__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getQuestionnairesAssignment_3_1()); }
(rule__DataMetric__QuestionnairesAssignment_3_1)*
{ after(grammarAccess.getDataMetricAccess().getQuestionnairesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Questionnaire__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__0__Impl
	rule__Questionnaire__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0()); }

	'Questionnaire' 

{ after(grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__1__Impl
	rule__Questionnaire__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getNameAssignment_1()); }
(rule__Questionnaire__NameAssignment_1)
{ after(grammarAccess.getQuestionnaireAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__2__Impl
	rule__Questionnaire__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getGroup_2()); }
(rule__Questionnaire__Group_2__0)?
{ after(grammarAccess.getQuestionnaireAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__3__Impl
	rule__Questionnaire__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getGroup_3()); }
(rule__Questionnaire__Group_3__0)?
{ after(grammarAccess.getQuestionnaireAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__4__Impl
	rule__Questionnaire__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getQuestionnaireAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__5__Impl
	rule__Questionnaire__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getQuestionAssignment_5()); }
(rule__Questionnaire__QuestionAssignment_5)*
{ after(grammarAccess.getQuestionnaireAccess().getQuestionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getRightCurlyBracketSemicolonKeyword_6()); }

	'};' 

{ after(grammarAccess.getQuestionnaireAccess().getRightCurlyBracketSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Questionnaire__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group_2__0__Impl
	rule__Questionnaire__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getRelatesKeyword_2_0()); }

	'relates' 

{ after(grammarAccess.getQuestionnaireAccess().getRelatesKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getRelatesToAssignment_2_1()); }
(rule__Questionnaire__RelatesToAssignment_2_1)*
{ after(grammarAccess.getQuestionnaireAccess().getRelatesToAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Questionnaire__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group_3__0__Impl
	rule__Questionnaire__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getTypeKeyword_3_0()); }

	'type' 

{ after(grammarAccess.getQuestionnaireAccess().getTypeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getQuestionnaireTypeAssignment_3_1()); }
(rule__Questionnaire__QuestionnaireTypeAssignment_3_1)
{ after(grammarAccess.getQuestionnaireAccess().getQuestionnaireTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Question__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__0__Impl
	rule__Question__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getNameAssignment_0()); }
(rule__Question__NameAssignment_0)
{ after(grammarAccess.getQuestionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__1__Impl
	rule__Question__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__2__Impl
	rule__Question__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getGroup_2()); }
(rule__Question__Group_2__0)
{ after(grammarAccess.getQuestionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__3__Impl
	rule__Question__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getGroup_3()); }
(rule__Question__Group_3__0)
{ after(grammarAccess.getQuestionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__4__Impl
	rule__Question__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getGroup_4()); }
(rule__Question__Group_4__0)?
{ after(grammarAccess.getQuestionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__5__Impl
	rule__Question__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getGroup_5()); }
(rule__Question__Group_5__0)?
{ after(grammarAccess.getQuestionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Question__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group_2__0__Impl
	rule__Question__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getDescriptionKeyword_2_0()); }

	'description' 

{ after(grammarAccess.getQuestionAccess().getDescriptionKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getDescriptionAssignment_2_1()); }
(rule__Question__DescriptionAssignment_2_1)
{ after(grammarAccess.getQuestionAccess().getDescriptionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Question__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group_3__0__Impl
	rule__Question__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getTypeKeyword_3_0()); }

	'type' 

{ after(grammarAccess.getQuestionAccess().getTypeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getTypeAssignment_3_1()); }
(rule__Question__TypeAssignment_3_1)
{ after(grammarAccess.getQuestionAccess().getTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Question__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group_4__0__Impl
	rule__Question__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getRequiredKeyword_4_0()); }

	'required' 

{ after(grammarAccess.getQuestionAccess().getRequiredKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getReqAssignment_4_1()); }
(rule__Question__ReqAssignment_4_1)
{ after(grammarAccess.getQuestionAccess().getReqAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Question__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group_5__0__Impl
	rule__Question__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getAlternativesKeyword_5_0()); }

	'Alternatives' 

{ after(grammarAccess.getQuestionAccess().getAlternativesKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getAlternativesAssignment_5_1()); }
(rule__Question__AlternativesAssignment_5_1)*
{ after(grammarAccess.getQuestionAccess().getAlternativesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Alternatives__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alternatives__Group__0__Impl
	rule__Alternatives__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternatives__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativesAccess().getOptionKeyword_0()); }

	'Option' 

{ after(grammarAccess.getAlternativesAccess().getOptionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alternatives__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alternatives__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternatives__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativesAccess().getDescriptionAssignment_1()); }
(rule__Alternatives__DescriptionAssignment_1)
{ after(grammarAccess.getAlternativesAccess().getDescriptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getElementsExperimentElementParserRuleCall_0()); }
	ruleExperimentElement{ after(grammarAccess.getModelAccess().getElementsExperimentElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getExperimentElementAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__ExperimentsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getExperimentsExperimentalPlanParserRuleCall_2_1_0()); }
	ruleExperimentalPlan{ after(grammarAccess.getExperimentElementAccess().getExperimentsExperimentalPlanParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__ProcessAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getProcessProcessParserRuleCall_3_0()); }
	ruleProcess{ after(grammarAccess.getExperimentElementAccess().getProcessProcessParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__MetricsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getMetricsMetricsParserRuleCall_4_0()); }
	ruleMetrics{ after(grammarAccess.getExperimentElementAccess().getMetricsMetricsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentElement__QuestionnaireAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentElementAccess().getQuestionnaireQuestionnaireParserRuleCall_5_1_0()); }
	ruleQuestionnaire{ after(grammarAccess.getExperimentElementAccess().getQuestionnaireQuestionnaireParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__GoalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getGoalGoalParserRuleCall_2_0()); }
	ruleGoal{ after(grammarAccess.getExperimentalPlanAccess().getGoalGoalParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__TypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getTypeDesignTypeEnumRuleCall_6_0()); }
	ruleDesignType{ after(grammarAccess.getExperimentalPlanAccess().getTypeDesignTypeEnumRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__ParameterAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getParameterParameterParserRuleCall_8_0()); }
	ruleParameter{ after(grammarAccess.getExperimentalPlanAccess().getParameterParameterParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__DependentVariableAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getDependentVariableDependentVariableParserRuleCall_9_0()); }
	ruleDependentVariable{ after(grammarAccess.getExperimentalPlanAccess().getDependentVariableDependentVariableParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__FactorAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getFactorFactorParserRuleCall_10_0()); }
	ruleFactor{ after(grammarAccess.getExperimentalPlanAccess().getFactorFactorParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__TohypothesesAssignment_12_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getTohypothesesHypothesesCrossReference_12_0_0()); }
(
{ before(grammarAccess.getExperimentalPlanAccess().getTohypothesesHypothesesQualifiedNameParserRuleCall_12_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getExperimentalPlanAccess().getTohypothesesHypothesesQualifiedNameParserRuleCall_12_0_0_1()); }
)
{ after(grammarAccess.getExperimentalPlanAccess().getTohypothesesHypothesesCrossReference_12_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__TechniqueAssignment_12_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getTechniqueAnalysisTechiqueTypeEnumRuleCall_12_2_0()); }
	ruleAnalysisTechiqueType{ after(grammarAccess.getExperimentalPlanAccess().getTechniqueAnalysisTechiqueTypeEnumRuleCall_12_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentalPlan__InternalReplicationAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentalPlanAccess().getInternalReplicationINTTerminalRuleCall_14_0()); }
	RULE_INT{ after(grammarAccess.getExperimentalPlanAccess().getInternalReplicationINTTerminalRuleCall_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__DescriptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getGoalAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__HypothesesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getHypothesesHypothesesParserRuleCall_3_0()); }
	ruleHypotheses{ after(grammarAccess.getGoalAccess().getHypothesesHypothesesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getHypothesesAccess().getNameIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__DescriptionAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getDescriptionSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getHypothesesAccess().getDescriptionSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__TypeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getTypeHypothesisTypeEnumRuleCall_0_2_0()); }
	ruleHypothesisType{ after(grammarAccess.getHypothesesAccess().getTypeHypothesisTypeEnumRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__DependentVariableAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getDependentVariableDependentVariableCrossReference_0_3_0()); }
(
{ before(grammarAccess.getHypothesesAccess().getDependentVariableDependentVariableQualifiedNameParserRuleCall_0_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getHypothesesAccess().getDependentVariableDependentVariableQualifiedNameParserRuleCall_0_3_0_1()); }
)
{ after(grammarAccess.getHypothesesAccess().getDependentVariableDependentVariableCrossReference_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__LevelsAssignment_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getLevelsLevelsCrossReference_0_5_0()); }
(
{ before(grammarAccess.getHypothesesAccess().getLevelsLevelsQualifiedNameParserRuleCall_0_5_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getHypothesesAccess().getLevelsLevelsQualifiedNameParserRuleCall_0_5_0_1()); }
)
{ after(grammarAccess.getHypothesesAccess().getLevelsLevelsCrossReference_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__OperatorAssignment_0_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getOperatorOperatorTypeEnumRuleCall_0_7_0()); }
	ruleOperatorType{ after(grammarAccess.getHypothesesAccess().getOperatorOperatorTypeEnumRuleCall_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__DependentVariableAssignment_0_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getDependentVariableDependentVariableCrossReference_0_8_0()); }
(
{ before(grammarAccess.getHypothesesAccess().getDependentVariableDependentVariableQualifiedNameParserRuleCall_0_8_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getHypothesesAccess().getDependentVariableDependentVariableQualifiedNameParserRuleCall_0_8_0_1()); }
)
{ after(grammarAccess.getHypothesesAccess().getDependentVariableDependentVariableCrossReference_0_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__LevelsAssignment_0_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getLevelsLevelsCrossReference_0_10_0()); }
(
{ before(grammarAccess.getHypothesesAccess().getLevelsLevelsQualifiedNameParserRuleCall_0_10_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getHypothesesAccess().getLevelsLevelsQualifiedNameParserRuleCall_0_10_0_1()); }
)
{ after(grammarAccess.getHypothesesAccess().getLevelsLevelsCrossReference_0_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getHypothesesAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__DependentVariableAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getDependentVariableDependentVariableCrossReference_1_2_0()); }
(
{ before(grammarAccess.getHypothesesAccess().getDependentVariableDependentVariableQualifiedNameParserRuleCall_1_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getHypothesesAccess().getDependentVariableDependentVariableQualifiedNameParserRuleCall_1_2_0_1()); }
)
{ after(grammarAccess.getHypothesesAccess().getDependentVariableDependentVariableCrossReference_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__RelationAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getRelationRelationTypeEnumRuleCall_1_3_0()); }
	ruleRelationType{ after(grammarAccess.getHypothesesAccess().getRelationRelationTypeEnumRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hypotheses__FactorAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHypothesesAccess().getFactorFactorCrossReference_1_4_0()); }
(
{ before(grammarAccess.getHypothesesAccess().getFactorFactorQualifiedNameParserRuleCall_1_4_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getHypothesesAccess().getFactorFactorQualifiedNameParserRuleCall_1_4_0_1()); }
)
{ after(grammarAccess.getHypothesesAccess().getFactorFactorCrossReference_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__VariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getVariableIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getVariableIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getParameterAccess().getValueSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DependentVariable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependentVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDependentVariableAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DependentVariable__DescriptionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependentVariableAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getDependentVariableAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DependentVariable__MetricsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependentVariableAccess().getMetricsMetricsCrossReference_3_0()); }
(
{ before(grammarAccess.getDependentVariableAccess().getMetricsMetricsQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getDependentVariableAccess().getMetricsMetricsQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getDependentVariableAccess().getMetricsMetricsCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFactorAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__IsDesiredVariationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getIsDesiredVariationAlternatives_3_0()); }
(rule__Factor__IsDesiredVariationAlternatives_3_0)
{ after(grammarAccess.getFactorAccess().getIsDesiredVariationAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__LevelAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getLevelLevelsParserRuleCall_4_1_0()); }
	ruleLevels{ after(grammarAccess.getFactorAccess().getLevelLevelsParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Levels__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLevelsAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getLevelsAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__TreatmentAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getTreatmentLevelsCrossReference_2_1_0()); }
(
{ before(grammarAccess.getProcessAccess().getTreatmentLevelsQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getProcessAccess().getTreatmentLevelsQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getProcessAccess().getTreatmentLevelsCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__RoleAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getRoleRoleTypeEnumRuleCall_4_1_0()); }
	ruleRoleType{ after(grammarAccess.getProcessAccess().getRoleRoleTypeEnumRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__TaskAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getTaskTaskParserRuleCall_5_0()); }
	ruleTask{ after(grammarAccess.getProcessAccess().getTaskTaskParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__DescriptionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getTaskAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NextAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNextTaskCrossReference_4_1_0()); }
(
{ before(grammarAccess.getTaskAccess().getNextTaskQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTaskAccess().getNextTaskQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getTaskAccess().getNextTaskCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__RoleAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getRoleRoleTypeEnumRuleCall_5_1_0()); }
	ruleRoleType{ after(grammarAccess.getTaskAccess().getRoleRoleTypeEnumRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__CollectDataAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getCollectDataCollectedDataCrossReference_7_1_0()); }
(
{ before(grammarAccess.getTaskAccess().getCollectDataCollectedDataQualifiedNameParserRuleCall_7_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTaskAccess().getCollectDataCollectedDataQualifiedNameParserRuleCall_7_1_0_1()); }
)
{ after(grammarAccess.getTaskAccess().getCollectDataCollectedDataCrossReference_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__ArtefactsAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getArtefactsArtefactParserRuleCall_8_1_0()); }
	ruleArtefact{ after(grammarAccess.getTaskAccess().getArtefactsArtefactParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__QuestionnaireAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getQuestionnaireQuestionnaireCrossReference_9_1_0()); }
(
{ before(grammarAccess.getTaskAccess().getQuestionnaireQuestionnaireQualifiedNameParserRuleCall_9_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTaskAccess().getQuestionnaireQuestionnaireQualifiedNameParserRuleCall_9_1_0_1()); }
)
{ after(grammarAccess.getTaskAccess().getQuestionnaireQuestionnaireCrossReference_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Artefact__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtefactAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getArtefactAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Artefact__DescriptionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtefactAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getArtefactAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Artefact__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtefactAccess().getTypeArtefactTypeEnumRuleCall_4_0()); }
	ruleArtefactType{ after(grammarAccess.getArtefactAccess().getTypeArtefactTypeEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMetricsAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__RelatesToAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getRelatesToProcessCrossReference_3_0()); }
(
{ before(grammarAccess.getMetricsAccess().getRelatesToProcessIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getMetricsAccess().getRelatesToProcessIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getMetricsAccess().getRelatesToProcessCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__DescriptionAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getDescriptionSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getMetricsAccess().getDescriptionSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metrics__DetailAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricsAccess().getDetailDetailParserRuleCall_6_0()); }
	ruleDetail{ after(grammarAccess.getMetricsAccess().getDetailDetailParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskMetric__TaskBeginAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskMetricAccess().getTaskBeginTaskCrossReference_1_1_0()); }
(
{ before(grammarAccess.getTaskMetricAccess().getTaskBeginTaskQualifiedNameParserRuleCall_1_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTaskMetricAccess().getTaskBeginTaskQualifiedNameParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getTaskMetricAccess().getTaskBeginTaskCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskMetric__TaskEndAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskMetricAccess().getTaskEndTaskCrossReference_2_1_0()); }
(
{ before(grammarAccess.getTaskMetricAccess().getTaskEndTaskQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTaskMetricAccess().getTaskEndTaskQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getTaskMetricAccess().getTaskEndTaskCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__CollectedDataAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getCollectedDataCollectedDataParserRuleCall_1_1_0()); }
	ruleCollectedData{ after(grammarAccess.getDataMetricAccess().getCollectedDataCollectedDataParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__DataTypeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getDataTypeDataTypeEnumRuleCall_1_3_0()); }
	ruleDataType{ after(grammarAccess.getDataMetricAccess().getDataTypeDataTypeEnumRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__ArtefactsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getArtefactsArtefactCrossReference_2_1_0()); }
(
{ before(grammarAccess.getDataMetricAccess().getArtefactsArtefactQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getDataMetricAccess().getArtefactsArtefactQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getDataMetricAccess().getArtefactsArtefactCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataMetric__QuestionnairesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataMetricAccess().getQuestionnairesQuestionnaireCrossReference_3_1_0()); }
(
{ before(grammarAccess.getDataMetricAccess().getQuestionnairesQuestionnaireQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getDataMetricAccess().getQuestionnairesQuestionnaireQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getDataMetricAccess().getQuestionnairesQuestionnaireCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectedData__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectedDataAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getCollectedDataAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getQuestionnaireAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__RelatesToAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getRelatesToProcessCrossReference_2_1_0()); }
(
{ before(grammarAccess.getQuestionnaireAccess().getRelatesToProcessIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getQuestionnaireAccess().getRelatesToProcessIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getQuestionnaireAccess().getRelatesToProcessCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__QuestionnaireTypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getQuestionnaireTypeQuestionnaireTypeEnumRuleCall_3_1_0()); }
	ruleQuestionnaireType{ after(grammarAccess.getQuestionnaireAccess().getQuestionnaireTypeQuestionnaireTypeEnumRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__QuestionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getQuestionQuestionParserRuleCall_5_0()); }
	ruleQuestion{ after(grammarAccess.getQuestionnaireAccess().getQuestionQuestionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getQuestionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__DescriptionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getQuestionAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__TypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getTypeAnswerTypeEnumRuleCall_3_1_0()); }
	ruleAnswerType{ after(grammarAccess.getQuestionAccess().getTypeAnswerTypeEnumRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__ReqAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getReqINTTerminalRuleCall_4_1_0()); }
	RULE_INT{ after(grammarAccess.getQuestionAccess().getReqINTTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__AlternativesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getAlternativesAlternativesParserRuleCall_5_1_0()); }
	ruleAlternatives{ after(grammarAccess.getQuestionAccess().getAlternativesAlternativesParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Alternatives__DescriptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativesAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getAlternativesAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


