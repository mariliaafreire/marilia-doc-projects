/*
* generated by Xtext
*/
grammar InternalExpdslv3;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package br.ufrn.dimap.ase.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.ufrn.dimap.ase.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import br.ufrn.dimap.ase.dsl.services.Expdslv3GrammarAccess;

}

@parser::members {

 	private Expdslv3GrammarAccess grammarAccess;
 	
    public InternalExpdslv3Parser(TokenStream input, Expdslv3GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected Expdslv3GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getElementsExperimentElementParserRuleCall_0()); 
	    }
		lv_elements_0_0=ruleExperimentElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"ExperimentElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleExperimentElement
entryRuleExperimentElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExperimentElementRule()); }
	 iv_ruleExperimentElement=ruleExperimentElement 
	 { $current=$iv_ruleExperimentElement.current; } 
	 EOF 
;

// Rule ExperimentElement
ruleExperimentElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Experiment' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExperimentElementAccess().getExperimentKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExperimentElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExperimentElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		lv_description_2_0=RULE_STRING
		{
			newLeafNode(lv_description_2_0, grammarAccess.getExperimentElementAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExperimentElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='Experimental Design' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExperimentElementAccess().getExperimentalDesignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentElementAccess().getExperimentsExperimentalDesignParserRuleCall_4_0()); 
	    }
		lv_experiments_4_0=ruleExperimentalDesign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentElementRule());
	        }
       		set(
       			$current, 
       			"experiments",
        		lv_experiments_4_0, 
        		"ExperimentalDesign");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentElementAccess().getProcessProcessParserRuleCall_5_0()); 
	    }
		lv_process_5_0=ruleProcess		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentElementRule());
	        }
       		add(
       			$current, 
       			"process",
        		lv_process_5_0, 
        		"Process");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_6='Questionnaires' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExperimentElementAccess().getQuestionnairesKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentElementAccess().getQuestionnaireQuestionnaireParserRuleCall_6_1_0()); 
	    }
		lv_questionnaire_7_0=ruleQuestionnaire		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentElementRule());
	        }
       		add(
       			$current, 
       			"questionnaire",
        		lv_questionnaire_7_0, 
        		"Questionnaire");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleExperimentalDesign
entryRuleExperimentalDesign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExperimentalDesignRule()); }
	 iv_ruleExperimentalDesign=ruleExperimentalDesign 
	 { $current=$iv_ruleExperimentalDesign.current; } 
	 EOF 
;

// Rule ExperimentalDesign
ruleExperimentalDesign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='Authorship' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExperimentalDesignAccess().getAuthorshipKeyword_0_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExperimentalDesignAccess().getLeftCurlyBracketKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentalDesignAccess().getAuthorAuthorParserRuleCall_0_2_0()); 
	    }
		lv_author_2_0=ruleAuthor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentalDesignRule());
	        }
       		add(
       			$current, 
       			"author",
        		lv_author_2_0, 
        		"Author");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExperimentalDesignAccess().getRightCurlyBracketKeyword_0_3());
    }
)?(	otherlv_4='Abstract' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExperimentalDesignAccess().getAbstractKeyword_1_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExperimentalDesignAccess().getLeftCurlyBracketKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentalDesignAccess().getAbstractAbstractParserRuleCall_1_2_0()); 
	    }
		lv_abstract_6_0=ruleAbstract		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentalDesignRule());
	        }
       		set(
       			$current, 
       			"abstract",
        		lv_abstract_6_0, 
        		"Abstract");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExperimentalDesignAccess().getRightCurlyBracketKeyword_1_3());
    }
)?(	otherlv_8='Keywords' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExperimentalDesignAccess().getKeywordsKeyword_2_0());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExperimentalDesignAccess().getLeftCurlyBracketKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentalDesignAccess().getKeywordKeywordParserRuleCall_2_2_0()); 
	    }
		lv_keyword_10_0=ruleKeyword		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentalDesignRule());
	        }
       		add(
       			$current, 
       			"keyword",
        		lv_keyword_10_0, 
        		"Keyword");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getExperimentalDesignAccess().getRightCurlyBracketKeyword_2_3());
    }
)?(	otherlv_12='Goals' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getExperimentalDesignAccess().getGoalsKeyword_3_0());
    }
	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getExperimentalDesignAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentalDesignAccess().getGoalGoalParserRuleCall_3_2_0()); 
	    }
		lv_goal_14_0=ruleGoal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentalDesignRule());
	        }
       		add(
       			$current, 
       			"goal",
        		lv_goal_14_0, 
        		"Goal");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getExperimentalDesignAccess().getRightCurlyBracketKeyword_3_3());
    }
)(	otherlv_16='Research Questions' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getExperimentalDesignAccess().getResearchQuestionsKeyword_4_0());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getExperimentalDesignAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentalDesignAccess().getResearchQuestionResearchQuestionParserRuleCall_4_2_0()); 
	    }
		lv_researchQuestion_18_0=ruleResearchQuestion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentalDesignRule());
	        }
       		add(
       			$current, 
       			"researchQuestion",
        		lv_researchQuestion_18_0, 
        		"ResearchQuestion");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getExperimentalDesignAccess().getRightCurlyBracketKeyword_4_3());
    }
)?(	otherlv_20='Research Hypotheses' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getExperimentalDesignAccess().getResearchHypothesesKeyword_5_0());
    }
	otherlv_21='{' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getExperimentalDesignAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentalDesignAccess().getResearchHypothesisResearchHypothesisParserRuleCall_5_2_0()); 
	    }
		lv_researchHypothesis_22_0=ruleResearchHypothesis		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentalDesignRule());
	        }
       		add(
       			$current, 
       			"researchHypothesis",
        		lv_researchHypothesis_22_0, 
        		"ResearchHypothesis");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getExperimentalDesignAccess().getRightCurlyBracketKeyword_5_3());
    }
)?(	otherlv_24='Variables' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getExperimentalDesignAccess().getVariablesKeyword_6_0());
    }
	otherlv_25='{' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getExperimentalDesignAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentalDesignAccess().getVariableVariableParserRuleCall_6_2_0()); 
	    }
		lv_variable_26_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentalDesignRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_26_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_27='}' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getExperimentalDesignAccess().getRightCurlyBracketKeyword_6_3());
    }
)?(	otherlv_28='Dependent Variables' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getExperimentalDesignAccess().getDependentVariablesKeyword_7_0());
    }
	otherlv_29='{' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getExperimentalDesignAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentalDesignAccess().getDepVarDepVariableParserRuleCall_7_2_0()); 
	    }
		lv_depVar_30_0=ruleDepVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentalDesignRule());
	        }
       		add(
       			$current, 
       			"depVar",
        		lv_depVar_30_0, 
        		"DepVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_31='}' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getExperimentalDesignAccess().getRightCurlyBracketKeyword_7_3());
    }
)(	otherlv_32='Factors' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getExperimentalDesignAccess().getFactorsKeyword_8_0());
    }
	otherlv_33='{' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getExperimentalDesignAccess().getLeftCurlyBracketKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentalDesignAccess().getFactorFactorParserRuleCall_8_2_0()); 
	    }
		lv_factor_34_0=ruleFactor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentalDesignRule());
	        }
       		add(
       			$current, 
       			"factor",
        		lv_factor_34_0, 
        		"Factor");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_35='}' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getExperimentalDesignAccess().getRightCurlyBracketKeyword_8_3());
    }
)(	otherlv_36='DoE' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getExperimentalDesignAccess().getDoEKeyword_9_0());
    }
	otherlv_37='=' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getExperimentalDesignAccess().getEqualsSignKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentalDesignAccess().getTypeDesignTypeEnumRuleCall_9_2_0()); 
	    }
		lv_type_38_0=ruleDesignType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentalDesignRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_38_0, 
        		"DesignType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_39='(' 
    {
    	newLeafNode(otherlv_39, grammarAccess.getExperimentalDesignAccess().getLeftParenthesisKeyword_9_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentalDesignAccess().getDoeDOEParserRuleCall_9_4_0()); 
	    }
		lv_doe_40_0=ruleDOE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentalDesignRule());
	        }
       		set(
       			$current, 
       			"doe",
        		lv_doe_40_0, 
        		"DOE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_41=')' 
    {
    	newLeafNode(otherlv_41, grammarAccess.getExperimentalDesignAccess().getRightParenthesisKeyword_9_5());
    }
)(	otherlv_42='Context' 
    {
    	newLeafNode(otherlv_42, grammarAccess.getExperimentalDesignAccess().getContextKeyword_10_0());
    }
	otherlv_43='{' 
    {
    	newLeafNode(otherlv_43, grammarAccess.getExperimentalDesignAccess().getLeftCurlyBracketKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentalDesignAccess().getParameterParameterParserRuleCall_10_2_0()); 
	    }
		lv_parameter_44_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentalDesignRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_44_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_45='}' 
    {
    	newLeafNode(otherlv_45, grammarAccess.getExperimentalDesignAccess().getRightCurlyBracketKeyword_10_3());
    }
)?(	otherlv_46='Internal Replication' 
    {
    	newLeafNode(otherlv_46, grammarAccess.getExperimentalDesignAccess().getInternalReplicationKeyword_11_0());
    }
(
(
		lv_replication_47_0=RULE_INT
		{
			newLeafNode(lv_replication_47_0, grammarAccess.getExperimentalDesignAccess().getReplicationINTTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExperimentalDesignRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"replication",
        		lv_replication_47_0, 
        		"INT");
	    }

)
))?)
;





// Entry rule entryRuleAuthor
entryRuleAuthor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAuthorRule()); }
	 iv_ruleAuthor=ruleAuthor 
	 { $current=$iv_ruleAuthor.current; } 
	 EOF 
;

// Rule Author
ruleAuthor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=RULE_ID
		{
			newLeafNode(lv_identifier_0_0, grammarAccess.getAuthorAccess().getIdentifierIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAuthorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"ID");
	    }

)
)(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAuthorAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAuthorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleAbstract
entryRuleAbstract returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractRule()); }
	 iv_ruleAbstract=ruleAbstract 
	 { $current=$iv_ruleAbstract.current; } 
	 EOF 
;

// Rule Abstract
ruleAbstract returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractAccess().getSimpleAbstractParserRuleCall_0()); 
    }
    this_SimpleAbstract_0=ruleSimpleAbstract
    { 
        $current = $this_SimpleAbstract_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractAccess().getStructuredAbstractParserRuleCall_1()); 
    }
    this_StructuredAbstract_1=ruleStructuredAbstract
    { 
        $current = $this_StructuredAbstract_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSimpleAbstract
entryRuleSimpleAbstract returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleAbstractRule()); }
	 iv_ruleSimpleAbstract=ruleSimpleAbstract 
	 { $current=$iv_ruleSimpleAbstract.current; } 
	 EOF 
;

// Rule SimpleAbstract
ruleSimpleAbstract returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_description_0_0=RULE_STRING
		{
			newLeafNode(lv_description_0_0, grammarAccess.getSimpleAbstractAccess().getDescriptionSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleAbstractRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleStructuredAbstract
entryRuleStructuredAbstract returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructuredAbstractRule()); }
	 iv_ruleStructuredAbstract=ruleStructuredAbstract 
	 { $current=$iv_ruleStructuredAbstract.current; } 
	 EOF 
;

// Rule StructuredAbstract
ruleStructuredAbstract returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStructuredAbstractAccess().getStructuredAbstractAction_0(),
            $current);
    }
)(	otherlv_1='Background' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStructuredAbstractAccess().getBackgroundKeyword_1_0());
    }
(
(
		lv_background_2_0=RULE_STRING
		{
			newLeafNode(lv_background_2_0, grammarAccess.getStructuredAbstractAccess().getBackgroundSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredAbstractRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"background",
        		lv_background_2_0, 
        		"STRING");
	    }

)
))?(	otherlv_3='Objective' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStructuredAbstractAccess().getObjectiveKeyword_2_0());
    }
(
(
		lv_objective_4_0=RULE_STRING
		{
			newLeafNode(lv_objective_4_0, grammarAccess.getStructuredAbstractAccess().getObjectiveSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredAbstractRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"objective",
        		lv_objective_4_0, 
        		"STRING");
	    }

)
))?(	otherlv_5='Methods' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStructuredAbstractAccess().getMethodsKeyword_3_0());
    }
(
(
		lv_methods_6_0=RULE_STRING
		{
			newLeafNode(lv_methods_6_0, grammarAccess.getStructuredAbstractAccess().getMethodsSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredAbstractRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"methods",
        		lv_methods_6_0, 
        		"STRING");
	    }

)
))?(	otherlv_7='Results' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStructuredAbstractAccess().getResultsKeyword_4_0());
    }
(
(
		lv_results_8_0=RULE_STRING
		{
			newLeafNode(lv_results_8_0, grammarAccess.getStructuredAbstractAccess().getResultsSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredAbstractRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"results",
        		lv_results_8_0, 
        		"STRING");
	    }

)
))?(	otherlv_9='Limitations' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStructuredAbstractAccess().getLimitationsKeyword_5_0());
    }
(
(
		lv_limitations_10_0=RULE_STRING
		{
			newLeafNode(lv_limitations_10_0, grammarAccess.getStructuredAbstractAccess().getLimitationsSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredAbstractRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"limitations",
        		lv_limitations_10_0, 
        		"STRING");
	    }

)
))?(	otherlv_11='Conclusions' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStructuredAbstractAccess().getConclusionsKeyword_6_0());
    }
(
(
		lv_conclusions_12_0=RULE_STRING
		{
			newLeafNode(lv_conclusions_12_0, grammarAccess.getStructuredAbstractAccess().getConclusionsSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredAbstractRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"conclusions",
        		lv_conclusions_12_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleKeyword
entryRuleKeyword returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeywordRule()); }
	 iv_ruleKeyword=ruleKeyword 
	 { $current=$iv_ruleKeyword.current; } 
	 EOF 
;

// Rule Keyword
ruleKeyword returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_description_0_0=RULE_STRING
		{
			newLeafNode(lv_description_0_0, grammarAccess.getKeywordAccess().getDescriptionSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKeywordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleGoal
entryRuleGoal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGoalRule()); }
	 iv_ruleGoal=ruleGoal 
	 { $current=$iv_ruleGoal.current; } 
	 EOF 
;

// Rule Goal
ruleGoal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getGoalAccess().getStructuredGoalParserRuleCall_0()); 
    }
    this_StructuredGoal_0=ruleStructuredGoal
    { 
        $current = $this_StructuredGoal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGoalAccess().getSimpleGoalParserRuleCall_1()); 
    }
    this_SimpleGoal_1=ruleSimpleGoal
    { 
        $current = $this_SimpleGoal_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSimpleGoal
entryRuleSimpleGoal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleGoalRule()); }
	 iv_ruleSimpleGoal=ruleSimpleGoal 
	 { $current=$iv_ruleSimpleGoal.current; } 
	 EOF 
;

// Rule SimpleGoal
ruleSimpleGoal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSimpleGoalAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		lv_description_1_0=RULE_STRING
		{
			newLeafNode(lv_description_1_0, grammarAccess.getSimpleGoalAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"STRING");
	    }

)
)?)
;





// Entry rule entryRuleStructuredGoal
entryRuleStructuredGoal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructuredGoalRule()); }
	 iv_ruleStructuredGoal=ruleStructuredGoal 
	 { $current=$iv_ruleStructuredGoal.current; } 
	 EOF 
;

// Rule StructuredGoal
ruleStructuredGoal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Analyze' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStructuredGoalAccess().getAnalyzeKeyword_0());
    }
(
(
		lv_object_1_0=RULE_STRING
		{
			newLeafNode(lv_object_1_0, grammarAccess.getStructuredGoalAccess().getObjectSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"object",
        		lv_object_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='for the purpose of' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStructuredGoalAccess().getForThePurposeOfKeyword_2());
    }
(
(
		lv_technique_3_0=RULE_STRING
		{
			newLeafNode(lv_technique_3_0, grammarAccess.getStructuredGoalAccess().getTechniqueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"technique",
        		lv_technique_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='with respect to their' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStructuredGoalAccess().getWithRespectToTheirKeyword_4());
    }
(
(
		lv_quality_5_0=RULE_STRING
		{
			newLeafNode(lv_quality_5_0, grammarAccess.getStructuredGoalAccess().getQualitySTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"quality",
        		lv_quality_5_0, 
        		"STRING");
	    }

)
)	otherlv_6='the point of view of the' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStructuredGoalAccess().getThePointOfViewOfTheKeyword_6());
    }
(
(
		lv_ptView_7_0=RULE_STRING
		{
			newLeafNode(lv_ptView_7_0, grammarAccess.getStructuredGoalAccess().getPtViewSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ptView",
        		lv_ptView_7_0, 
        		"STRING");
	    }

)
)	otherlv_8='in the context of' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStructuredGoalAccess().getInTheContextOfKeyword_8());
    }
(
(
		lv_contextOf_9_0=RULE_STRING
		{
			newLeafNode(lv_contextOf_9_0, grammarAccess.getStructuredGoalAccess().getContextOfSTRINGTerminalRuleCall_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"contextOf",
        		lv_contextOf_9_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleResearchQuestion
entryRuleResearchQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResearchQuestionRule()); }
	 iv_ruleResearchQuestion=ruleResearchQuestion 
	 { $current=$iv_ruleResearchQuestion.current; } 
	 EOF 
;

// Rule ResearchQuestion
ruleResearchQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getResearchQuestionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResearchQuestionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		lv_description_1_0=RULE_STRING
		{
			newLeafNode(lv_description_1_0, grammarAccess.getResearchQuestionAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResearchQuestionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='relates to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResearchQuestionAccess().getRelatesToKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResearchQuestionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getResearchQuestionAccess().getGoalGoalCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleResearchHypothesis
entryRuleResearchHypothesis returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResearchHypothesisRule()); }
	 iv_ruleResearchHypothesis=ruleResearchHypothesis 
	 { $current=$iv_ruleResearchHypothesis.current; } 
	 EOF 
;

// Rule ResearchHypothesis
ruleResearchHypothesis returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getResearchHypothesisAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResearchHypothesisRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		lv_description_1_0=RULE_STRING
		{
			newLeafNode(lv_description_1_0, grammarAccess.getResearchHypothesisAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResearchHypothesisRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='relates to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResearchHypothesisAccess().getRelatesToKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResearchHypothesisRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getResearchHypothesisAccess().getGoalGoalCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_ruleVariable=ruleVariable 
	 { $current=$iv_ruleVariable.current; } 
	 EOF 
;

// Rule Variable
ruleVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		lv_description_1_0=RULE_STRING
		{
			newLeafNode(lv_description_1_0, grammarAccess.getVariableAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2='Scale' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getScaleKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getScaleTypeScaleTypeEnumRuleCall_2_1_0()); 
	    }
		lv_scaleType_3_0=ruleScaleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"scaleType",
        		lv_scaleType_3_0, 
        		"ScaleType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='Range' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVariableAccess().getRangeKeyword_3_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVariableAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getRangeRangeParserRuleCall_3_2_0()); 
	    }
		lv_range_6_0=ruleRange		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		add(
       			$current, 
       			"range",
        		lv_range_6_0, 
        		"Range");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVariableAccess().getRightCurlyBracketKeyword_3_3());
    }
)?)
;





// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	 iv_ruleRange=ruleRange 
	 { $current=$iv_ruleRange.current; } 
	 EOF 
;

// Rule Range
ruleRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getRangeAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleDepVariable
entryRuleDepVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDepVariableRule()); }
	 iv_ruleDepVariable=ruleDepVariable 
	 { $current=$iv_ruleDepVariable.current; } 
	 EOF 
;

// Rule DepVariable
ruleDepVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDepVariableRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDepVariableAccess().getVariableVariableCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='relates to' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDepVariableAccess().getRelatesToKeyword_1());
    }
((	otherlv_2='RQ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDepVariableAccess().getRQKeyword_2_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDepVariableRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDepVariableAccess().getRqResearchQuestionCrossReference_2_0_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_4='RH' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDepVariableAccess().getRHKeyword_2_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDepVariableRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDepVariableAccess().getRhResearchHypothesisCrossReference_2_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	 iv_ruleFactor=ruleFactor 
	 { $current=$iv_ruleFactor.current; } 
	 EOF 
;

// Rule Factor
ruleFactor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFactorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFactorAccess().getNameVariableCrossReference_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleDOE
entryRuleDOE returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDOERule()); }
	 iv_ruleDOE=ruleDOE 
	 { $current=$iv_ruleDOE.current; } 
	 EOF 
;

// Rule DOE
ruleDOE returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDOEAccess().getLSParserRuleCall_0()); 
    }
    this_LS_0=ruleLS
    { 
        $current = $this_LS_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDOEAccess().getRCBDParserRuleCall_1()); 
    }
    this_RCBD_1=ruleRCBD
    { 
        $current = $this_RCBD_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDOEAccess().getCRBParserRuleCall_2()); 
    }
    this_CRB_2=ruleCRB
    { 
        $current = $this_CRB_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLS
entryRuleLS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLSRule()); }
	 iv_ruleLS=ruleLS 
	 { $current=$iv_ruleLS.current; } 
	 EOF 
;

// Rule LS
ruleLS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLSAccess().getLSAction_0(),
            $current);
    }
)	otherlv_1='column =' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLSAccess().getColumnKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLSRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLSAccess().getColVariableCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLSAccess().getCommaKeyword_3());
    }
	otherlv_4='row =' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLSAccess().getRowKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLSRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLSAccess().getRowVariableCrossReference_5_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLSAccess().getCommaKeyword_6());
    }
	otherlv_7='treatment =' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLSAccess().getTreatmentKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLSRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLSAccess().getTreatmentVariableCrossReference_8_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRCBD
entryRuleRCBD returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRCBDRule()); }
	 iv_ruleRCBD=ruleRCBD 
	 { $current=$iv_ruleRCBD.current; } 
	 EOF 
;

// Rule RCBD
ruleRCBD returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRCBDAccess().getRCBDAction_0(),
            $current);
    }
)	otherlv_1='blockVariable =' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRCBDAccess().getBlockVariableKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRCBDRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRCBDAccess().getBlockVariableVariableCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRCBDAccess().getCommaKeyword_3());
    }
	otherlv_4='treatment =' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRCBDAccess().getTreatmentKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRCBDRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRCBDAccess().getTreatmentVariableCrossReference_5_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCRB
entryRuleCRB returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCRBRule()); }
	 iv_ruleCRB=ruleCRB 
	 { $current=$iv_ruleCRB.current; } 
	 EOF 
;

// Rule CRB
ruleCRB returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCRBAccess().getCRBAction_0(),
            $current);
    }
)	otherlv_1='treatment =' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCRBAccess().getTreatmentKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCRBRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCRBAccess().getTreatmentVariableCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getVariableVariableCrossReference_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleProcess
entryRuleProcess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcessRule()); }
	 iv_ruleProcess=ruleProcess 
	 { $current=$iv_ruleProcess.current; } 
	 EOF 
;

// Rule Process
ruleProcess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Process' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProcessAccess().getProcessKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcessRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProcessAccess().getToKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcessRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getProcessAccess().getTreatmentRangeCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_5='Role' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProcessAccess().getRoleKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessAccess().getRoleRoleTypeEnumRuleCall_4_1_0()); 
	    }
		lv_role_6_0=ruleRoleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessRule());
	        }
       		add(
       			$current, 
       			"role",
        		lv_role_6_0, 
        		"RoleType");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessAccess().getTaskTaskParserRuleCall_5_0()); 
	    }
		lv_task_7_0=ruleTask		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessRule());
	        }
       		add(
       			$current, 
       			"task",
        		lv_task_7_0, 
        		"Task");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleTask
entryRuleTask returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTaskRule()); }
	 iv_ruleTask=ruleTask 
	 { $current=$iv_ruleTask.current; } 
	 EOF 
;

// Rule Task
ruleTask returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Task' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTaskAccess().getTaskKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='description' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTaskAccess().getDescriptionKeyword_2());
    }
(
(
		lv_description_3_0=RULE_STRING
		{
			newLeafNode(lv_description_3_0, grammarAccess.getTaskAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4='to' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTaskAccess().getToKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTaskAccess().getNextTaskCrossReference_4_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_6='Role' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTaskAccess().getRoleKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskAccess().getRoleRoleTypeEnumRuleCall_5_1_0()); 
	    }
		lv_role_7_0=ruleRoleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskRule());
	        }
       		add(
       			$current, 
       			"role",
        		lv_role_7_0, 
        		"RoleType");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_6());
    }
(	otherlv_9='artefacts' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTaskAccess().getArtefactsKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskAccess().getArtefactsArtefactParserRuleCall_7_1_0()); 
	    }
		lv_artefacts_10_0=ruleArtefact		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskRule());
	        }
       		add(
       			$current, 
       			"artefacts",
        		lv_artefacts_10_0, 
        		"Artefact");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_11='metrics' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTaskAccess().getMetricsKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskAccess().getMetricMetricParserRuleCall_8_1_0()); 
	    }
		lv_metric_12_0=ruleMetric		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskRule());
	        }
       		add(
       			$current, 
       			"metric",
        		lv_metric_12_0, 
        		"Metric");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleArtefact
entryRuleArtefact returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArtefactRule()); }
	 iv_ruleArtefact=ruleArtefact 
	 { $current=$iv_ruleArtefact.current; } 
	 EOF 
;

// Rule Artefact
ruleArtefact returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getArtefactAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArtefactRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='description' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArtefactAccess().getDescriptionKeyword_1());
    }
(
(
		lv_description_2_0=RULE_STRING
		{
			newLeafNode(lv_description_2_0, grammarAccess.getArtefactAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArtefactRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='type' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArtefactAccess().getTypeKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArtefactAccess().getTypeArtefactTypeEnumRuleCall_4_0()); 
	    }
		lv_type_4_0=ruleArtefactType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtefactRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"ArtefactType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMetric
entryRuleMetric returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetricRule()); }
	 iv_ruleMetric=ruleMetric 
	 { $current=$iv_ruleMetric.current; } 
	 EOF 
;

// Rule Metric
ruleMetric returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetricRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMetricAccess().getNameVariableCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetricAccess().getTypeMetricTypeEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleMetricType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetricRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"MetricType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMetricAccess().getAsKeyword_2_0());
    }
(
(
		lv_varname_3_0=RULE_ID
		{
			newLeafNode(lv_varname_3_0, grammarAccess.getMetricAccess().getVarnameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetricRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"varname",
        		lv_varname_3_0, 
        		"ID");
	    }

)
))?)
;





// Entry rule entryRuleQuestionnaire
entryRuleQuestionnaire returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuestionnaireRule()); }
	 iv_ruleQuestionnaire=ruleQuestionnaire 
	 { $current=$iv_ruleQuestionnaire.current; } 
	 EOF 
;

// Rule Questionnaire
ruleQuestionnaire returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Questionnaire' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getQuestionnaireAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuestionnaireRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='relates' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQuestionnaireAccess().getRelatesKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuestionnaireRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getQuestionnaireAccess().getRelatesToProcessCrossReference_2_1_0()); 
	}

)
)*)?(	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getQuestionnaireAccess().getTypeKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionnaireAccess().getQuestionnaireTypeQuestionnaireTypeEnumRuleCall_3_1_0()); 
	    }
		lv_questionnaireType_5_0=ruleQuestionnaireType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
	        }
       		set(
       			$current, 
       			"questionnaireType",
        		lv_questionnaireType_5_0, 
        		"QuestionnaireType");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getQuestionnaireAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionnaireAccess().getQuestionQuestionParserRuleCall_5_0()); 
	    }
		lv_question_7_0=ruleQuestion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
	        }
       		add(
       			$current, 
       			"question",
        		lv_question_7_0, 
        		"Question");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='};' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getQuestionnaireAccess().getRightCurlyBracketSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleQuestion
entryRuleQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuestionRule()); }
	 iv_ruleQuestion=ruleQuestion 
	 { $current=$iv_ruleQuestion.current; } 
	 EOF 
;

// Rule Question
ruleQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getQuestionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuestionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='description' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQuestionAccess().getDescriptionKeyword_2_0());
    }
(
(
		lv_description_3_0=RULE_STRING
		{
			newLeafNode(lv_description_3_0, grammarAccess.getQuestionAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuestionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_3_0, 
        		"STRING");
	    }

)
))(	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getQuestionAccess().getTypeKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionAccess().getTypeAnswerTypeEnumRuleCall_3_1_0()); 
	    }
		lv_type_5_0=ruleAnswerType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"AnswerType");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_6='required' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getQuestionAccess().getRequiredKeyword_4_0());
    }
(
(
		lv_req_7_0=RULE_INT
		{
			newLeafNode(lv_req_7_0, grammarAccess.getQuestionAccess().getReqINTTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuestionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"req",
        		lv_req_7_0, 
        		"INT");
	    }

)
))?(	otherlv_8='Alternatives' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getQuestionAccess().getAlternativesKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionAccess().getAlternativesAlternativesParserRuleCall_5_1_0()); 
	    }
		lv_alternatives_9_0=ruleAlternatives		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionRule());
	        }
       		add(
       			$current, 
       			"alternatives",
        		lv_alternatives_9_0, 
        		"Alternatives");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleAlternatives
entryRuleAlternatives returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlternativesRule()); }
	 iv_ruleAlternatives=ruleAlternatives 
	 { $current=$iv_ruleAlternatives.current; } 
	 EOF 
;

// Rule Alternatives
ruleAlternatives returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Option' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAlternativesAccess().getOptionKeyword_0());
    }
(
(
		lv_description_1_0=RULE_STRING
		{
			newLeafNode(lv_description_1_0, grammarAccess.getAlternativesAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAlternativesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"STRING");
	    }

)
))
;





// Rule ScaleType
ruleScaleType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Numerical' 
	{
        $current = grammarAccess.getScaleTypeAccess().getNumericialEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getScaleTypeAccess().getNumericialEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Ratio' 
	{
        $current = grammarAccess.getScaleTypeAccess().getRatioEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getScaleTypeAccess().getRatioEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Ordinal' 
	{
        $current = grammarAccess.getScaleTypeAccess().getOrdinalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getScaleTypeAccess().getOrdinalEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Nominal' 
	{
        $current = grammarAccess.getScaleTypeAccess().getNominalEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getScaleTypeAccess().getNominalEnumLiteralDeclaration_3()); 
    }
));



// Rule DesignType
ruleDesignType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='CRD - Completely Randomized Design' 
	{
        $current = grammarAccess.getDesignTypeAccess().getCDREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getDesignTypeAccess().getCDREnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='RCBD - Randomized Complete Block Design' 
	{
        $current = grammarAccess.getDesignTypeAccess().getRCBDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getDesignTypeAccess().getRCBDEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='LS - Latin Square' 
	{
        $current = grammarAccess.getDesignTypeAccess().getLSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getDesignTypeAccess().getLSEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Other' 
	{
        $current = grammarAccess.getDesignTypeAccess().getOtherEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getDesignTypeAccess().getOtherEnumLiteralDeclaration_3()); 
    }
));



// Rule RoleType
ruleRoleType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Participant' 
	{
        $current = grammarAccess.getRoleTypeAccess().getParticipantEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getRoleTypeAccess().getParticipantEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Researcher' 
	{
        $current = grammarAccess.getRoleTypeAccess().getResearcherEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getRoleTypeAccess().getResearcherEnumLiteralDeclaration_1()); 
    }
));



// Rule ArtefactType
ruleArtefactType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='input' 
	{
        $current = grammarAccess.getArtefactTypeAccess().getIn_EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getArtefactTypeAccess().getIn_EnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='output' 
	{
        $current = grammarAccess.getArtefactTypeAccess().getOut_EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getArtefactTypeAccess().getOut_EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='inoutput' 
	{
        $current = grammarAccess.getArtefactTypeAccess().getInout_EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getArtefactTypeAccess().getInout_EnumLiteralDeclaration_2()); 
    }
));



// Rule MetricType
ruleMetricType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
(	enumLiteral_0='auto-time' 
	{
        $current = grammarAccess.getMetricTypeAccess().getAutotimeEnumLiteralDeclaration().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMetricTypeAccess().getAutotimeEnumLiteralDeclaration()); 
    }
);



// Rule QuestionnaireType
ruleQuestionnaireType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Pre' 
	{
        $current = grammarAccess.getQuestionnaireTypeAccess().getPreEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getQuestionnaireTypeAccess().getPreEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Post' 
	{
        $current = grammarAccess.getQuestionnaireTypeAccess().getPostEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getQuestionnaireTypeAccess().getPostEnumLiteralDeclaration_1()); 
    }
));



// Rule AnswerType
ruleAnswerType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Text' 
	{
        $current = grammarAccess.getAnswerTypeAccess().getTextEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAnswerTypeAccess().getTextEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='ParagraphText' 
	{
        $current = grammarAccess.getAnswerTypeAccess().getParagraphTextEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAnswerTypeAccess().getParagraphTextEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='MultipleChoice' 
	{
        $current = grammarAccess.getAnswerTypeAccess().getMultipleChoiceEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAnswerTypeAccess().getMultipleChoiceEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='SingleChoice' 
	{
        $current = grammarAccess.getAnswerTypeAccess().getSingleChoiceEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getAnswerTypeAccess().getSingleChoiceEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Scale' 
	{
        $current = grammarAccess.getAnswerTypeAccess().getScaleEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getAnswerTypeAccess().getScaleEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Grid' 
	{
        $current = grammarAccess.getAnswerTypeAccess().getGridEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getAnswerTypeAccess().getGridEnumLiteralDeclaration_5()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


