/*
* generated by Xtext
*/
package br.ufrn.dimap.ase.dsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import br.ufrn.dimap.ase.dsl.services.ExpDslv2GrammarAccess;

public class ExpDslv2Parser extends AbstractContentAssistParser {
	
	@Inject
	private ExpDslv2GrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected br.ufrn.dimap.ase.dsl.ui.contentassist.antlr.internal.InternalExpDslv2Parser createParser() {
		br.ufrn.dimap.ase.dsl.ui.contentassist.antlr.internal.InternalExpDslv2Parser result = new br.ufrn.dimap.ase.dsl.ui.contentassist.antlr.internal.InternalExpDslv2Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getHypothesesAccess().getAlternatives(), "rule__Hypotheses__Alternatives");
					put(grammarAccess.getFactorAccess().getIsDesiredVariationAlternatives_3_0(), "rule__Factor__IsDesiredVariationAlternatives_3_0");
					put(grammarAccess.getDetailAccess().getAlternatives(), "rule__Detail__Alternatives");
					put(grammarAccess.getRelationTypeAccess().getAlternatives(), "rule__RelationType__Alternatives");
					put(grammarAccess.getOperatorTypeAccess().getAlternatives(), "rule__OperatorType__Alternatives");
					put(grammarAccess.getHypothesisTypeAccess().getAlternatives(), "rule__HypothesisType__Alternatives");
					put(grammarAccess.getDesignTypeAccess().getAlternatives(), "rule__DesignType__Alternatives");
					put(grammarAccess.getAnalysisTechiqueTypeAccess().getAlternatives(), "rule__AnalysisTechiqueType__Alternatives");
					put(grammarAccess.getRoleTypeAccess().getAlternatives(), "rule__RoleType__Alternatives");
					put(grammarAccess.getArtefactTypeAccess().getAlternatives(), "rule__ArtefactType__Alternatives");
					put(grammarAccess.getDataTypeAccess().getAlternatives(), "rule__DataType__Alternatives");
					put(grammarAccess.getQuestionnaireTypeAccess().getAlternatives(), "rule__QuestionnaireType__Alternatives");
					put(grammarAccess.getAnswerTypeAccess().getAlternatives(), "rule__AnswerType__Alternatives");
					put(grammarAccess.getExperimentElementAccess().getGroup(), "rule__ExperimentElement__Group__0");
					put(grammarAccess.getExperimentElementAccess().getGroup_2(), "rule__ExperimentElement__Group_2__0");
					put(grammarAccess.getExperimentElementAccess().getGroup_5(), "rule__ExperimentElement__Group_5__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getExperimentalPlanAccess().getGroup(), "rule__ExperimentalPlan__Group__0");
					put(grammarAccess.getExperimentalPlanAccess().getGroup_12(), "rule__ExperimentalPlan__Group_12__0");
					put(grammarAccess.getGoalAccess().getGroup(), "rule__Goal__Group__0");
					put(grammarAccess.getHypothesesAccess().getGroup_0(), "rule__Hypotheses__Group_0__0");
					put(grammarAccess.getHypothesesAccess().getGroup_1(), "rule__Hypotheses__Group_1__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getDependentVariableAccess().getGroup(), "rule__DependentVariable__Group__0");
					put(grammarAccess.getFactorAccess().getGroup(), "rule__Factor__Group__0");
					put(grammarAccess.getFactorAccess().getGroup_4(), "rule__Factor__Group_4__0");
					put(grammarAccess.getProcessAccess().getGroup(), "rule__Process__Group__0");
					put(grammarAccess.getProcessAccess().getGroup_2(), "rule__Process__Group_2__0");
					put(grammarAccess.getProcessAccess().getGroup_4(), "rule__Process__Group_4__0");
					put(grammarAccess.getTaskAccess().getGroup(), "rule__Task__Group__0");
					put(grammarAccess.getTaskAccess().getGroup_4(), "rule__Task__Group_4__0");
					put(grammarAccess.getTaskAccess().getGroup_5(), "rule__Task__Group_5__0");
					put(grammarAccess.getTaskAccess().getGroup_7(), "rule__Task__Group_7__0");
					put(grammarAccess.getTaskAccess().getGroup_8(), "rule__Task__Group_8__0");
					put(grammarAccess.getTaskAccess().getGroup_9(), "rule__Task__Group_9__0");
					put(grammarAccess.getArtefactAccess().getGroup(), "rule__Artefact__Group__0");
					put(grammarAccess.getMetricsAccess().getGroup(), "rule__Metrics__Group__0");
					put(grammarAccess.getMetricsAccess().getGroup_5(), "rule__Metrics__Group_5__0");
					put(grammarAccess.getTaskMetricAccess().getGroup(), "rule__TaskMetric__Group__0");
					put(grammarAccess.getTaskMetricAccess().getGroup_1(), "rule__TaskMetric__Group_1__0");
					put(grammarAccess.getTaskMetricAccess().getGroup_2(), "rule__TaskMetric__Group_2__0");
					put(grammarAccess.getDataMetricAccess().getGroup(), "rule__DataMetric__Group__0");
					put(grammarAccess.getDataMetricAccess().getGroup_1(), "rule__DataMetric__Group_1__0");
					put(grammarAccess.getDataMetricAccess().getGroup_2(), "rule__DataMetric__Group_2__0");
					put(grammarAccess.getDataMetricAccess().getGroup_3(), "rule__DataMetric__Group_3__0");
					put(grammarAccess.getQuestionnaireAccess().getGroup(), "rule__Questionnaire__Group__0");
					put(grammarAccess.getQuestionnaireAccess().getGroup_2(), "rule__Questionnaire__Group_2__0");
					put(grammarAccess.getQuestionnaireAccess().getGroup_3(), "rule__Questionnaire__Group_3__0");
					put(grammarAccess.getQuestionAccess().getGroup(), "rule__Question__Group__0");
					put(grammarAccess.getQuestionAccess().getGroup_2(), "rule__Question__Group_2__0");
					put(grammarAccess.getQuestionAccess().getGroup_3(), "rule__Question__Group_3__0");
					put(grammarAccess.getQuestionAccess().getGroup_4(), "rule__Question__Group_4__0");
					put(grammarAccess.getQuestionAccess().getGroup_5(), "rule__Question__Group_5__0");
					put(grammarAccess.getAlternativesAccess().getGroup(), "rule__Alternatives__Group__0");
					put(grammarAccess.getModelAccess().getElementsAssignment(), "rule__Model__ElementsAssignment");
					put(grammarAccess.getExperimentElementAccess().getNameAssignment_1(), "rule__ExperimentElement__NameAssignment_1");
					put(grammarAccess.getExperimentElementAccess().getExperimentsAssignment_2_1(), "rule__ExperimentElement__ExperimentsAssignment_2_1");
					put(grammarAccess.getExperimentElementAccess().getProcessAssignment_3(), "rule__ExperimentElement__ProcessAssignment_3");
					put(grammarAccess.getExperimentElementAccess().getMetricsAssignment_4(), "rule__ExperimentElement__MetricsAssignment_4");
					put(grammarAccess.getExperimentElementAccess().getQuestionnaireAssignment_5_1(), "rule__ExperimentElement__QuestionnaireAssignment_5_1");
					put(grammarAccess.getExperimentalPlanAccess().getGoalAssignment_2(), "rule__ExperimentalPlan__GoalAssignment_2");
					put(grammarAccess.getExperimentalPlanAccess().getTypeAssignment_6(), "rule__ExperimentalPlan__TypeAssignment_6");
					put(grammarAccess.getExperimentalPlanAccess().getParameterAssignment_8(), "rule__ExperimentalPlan__ParameterAssignment_8");
					put(grammarAccess.getExperimentalPlanAccess().getDependentVariableAssignment_9(), "rule__ExperimentalPlan__DependentVariableAssignment_9");
					put(grammarAccess.getExperimentalPlanAccess().getFactorAssignment_10(), "rule__ExperimentalPlan__FactorAssignment_10");
					put(grammarAccess.getExperimentalPlanAccess().getTohypothesesAssignment_12_0(), "rule__ExperimentalPlan__TohypothesesAssignment_12_0");
					put(grammarAccess.getExperimentalPlanAccess().getTechniqueAssignment_12_2(), "rule__ExperimentalPlan__TechniqueAssignment_12_2");
					put(grammarAccess.getExperimentalPlanAccess().getInternalReplicationAssignment_14(), "rule__ExperimentalPlan__InternalReplicationAssignment_14");
					put(grammarAccess.getGoalAccess().getNameAssignment_0(), "rule__Goal__NameAssignment_0");
					put(grammarAccess.getGoalAccess().getDescriptionAssignment_1(), "rule__Goal__DescriptionAssignment_1");
					put(grammarAccess.getGoalAccess().getHypothesesAssignment_3(), "rule__Goal__HypothesesAssignment_3");
					put(grammarAccess.getHypothesesAccess().getNameAssignment_0_0(), "rule__Hypotheses__NameAssignment_0_0");
					put(grammarAccess.getHypothesesAccess().getDescriptionAssignment_0_1(), "rule__Hypotheses__DescriptionAssignment_0_1");
					put(grammarAccess.getHypothesesAccess().getTypeAssignment_0_2(), "rule__Hypotheses__TypeAssignment_0_2");
					put(grammarAccess.getHypothesesAccess().getDependentVariableAssignment_0_3(), "rule__Hypotheses__DependentVariableAssignment_0_3");
					put(grammarAccess.getHypothesesAccess().getLevelsAssignment_0_5(), "rule__Hypotheses__LevelsAssignment_0_5");
					put(grammarAccess.getHypothesesAccess().getOperatorAssignment_0_7(), "rule__Hypotheses__OperatorAssignment_0_7");
					put(grammarAccess.getHypothesesAccess().getDependentVariableAssignment_0_8(), "rule__Hypotheses__DependentVariableAssignment_0_8");
					put(grammarAccess.getHypothesesAccess().getLevelsAssignment_0_10(), "rule__Hypotheses__LevelsAssignment_0_10");
					put(grammarAccess.getHypothesesAccess().getNameAssignment_1_0(), "rule__Hypotheses__NameAssignment_1_0");
					put(grammarAccess.getHypothesesAccess().getDependentVariableAssignment_1_2(), "rule__Hypotheses__DependentVariableAssignment_1_2");
					put(grammarAccess.getHypothesesAccess().getRelationAssignment_1_3(), "rule__Hypotheses__RelationAssignment_1_3");
					put(grammarAccess.getHypothesesAccess().getFactorAssignment_1_4(), "rule__Hypotheses__FactorAssignment_1_4");
					put(grammarAccess.getParameterAccess().getVariableAssignment_1(), "rule__Parameter__VariableAssignment_1");
					put(grammarAccess.getParameterAccess().getValueAssignment_3(), "rule__Parameter__ValueAssignment_3");
					put(grammarAccess.getDependentVariableAccess().getNameAssignment_1(), "rule__DependentVariable__NameAssignment_1");
					put(grammarAccess.getDependentVariableAccess().getDescriptionAssignment_2(), "rule__DependentVariable__DescriptionAssignment_2");
					put(grammarAccess.getDependentVariableAccess().getMetricsAssignment_3(), "rule__DependentVariable__MetricsAssignment_3");
					put(grammarAccess.getFactorAccess().getNameAssignment_1(), "rule__Factor__NameAssignment_1");
					put(grammarAccess.getFactorAccess().getIsDesiredVariationAssignment_3(), "rule__Factor__IsDesiredVariationAssignment_3");
					put(grammarAccess.getFactorAccess().getLevelAssignment_4_1(), "rule__Factor__LevelAssignment_4_1");
					put(grammarAccess.getLevelsAccess().getNameAssignment(), "rule__Levels__NameAssignment");
					put(grammarAccess.getProcessAccess().getNameAssignment_1(), "rule__Process__NameAssignment_1");
					put(grammarAccess.getProcessAccess().getTreatmentAssignment_2_1(), "rule__Process__TreatmentAssignment_2_1");
					put(grammarAccess.getProcessAccess().getRoleAssignment_4_1(), "rule__Process__RoleAssignment_4_1");
					put(grammarAccess.getProcessAccess().getTaskAssignment_5(), "rule__Process__TaskAssignment_5");
					put(grammarAccess.getTaskAccess().getNameAssignment_1(), "rule__Task__NameAssignment_1");
					put(grammarAccess.getTaskAccess().getDescriptionAssignment_3(), "rule__Task__DescriptionAssignment_3");
					put(grammarAccess.getTaskAccess().getNextAssignment_4_1(), "rule__Task__NextAssignment_4_1");
					put(grammarAccess.getTaskAccess().getRoleAssignment_5_1(), "rule__Task__RoleAssignment_5_1");
					put(grammarAccess.getTaskAccess().getCollectDataAssignment_7_1(), "rule__Task__CollectDataAssignment_7_1");
					put(grammarAccess.getTaskAccess().getArtefactsAssignment_8_1(), "rule__Task__ArtefactsAssignment_8_1");
					put(grammarAccess.getTaskAccess().getQuestionnaireAssignment_9_1(), "rule__Task__QuestionnaireAssignment_9_1");
					put(grammarAccess.getArtefactAccess().getNameAssignment_0(), "rule__Artefact__NameAssignment_0");
					put(grammarAccess.getArtefactAccess().getDescriptionAssignment_2(), "rule__Artefact__DescriptionAssignment_2");
					put(grammarAccess.getArtefactAccess().getTypeAssignment_4(), "rule__Artefact__TypeAssignment_4");
					put(grammarAccess.getMetricsAccess().getNameAssignment_1(), "rule__Metrics__NameAssignment_1");
					put(grammarAccess.getMetricsAccess().getRelatesToAssignment_3(), "rule__Metrics__RelatesToAssignment_3");
					put(grammarAccess.getMetricsAccess().getDescriptionAssignment_5_1(), "rule__Metrics__DescriptionAssignment_5_1");
					put(grammarAccess.getMetricsAccess().getDetailAssignment_6(), "rule__Metrics__DetailAssignment_6");
					put(grammarAccess.getTaskMetricAccess().getTaskBeginAssignment_1_1(), "rule__TaskMetric__TaskBeginAssignment_1_1");
					put(grammarAccess.getTaskMetricAccess().getTaskEndAssignment_2_1(), "rule__TaskMetric__TaskEndAssignment_2_1");
					put(grammarAccess.getDataMetricAccess().getCollectedDataAssignment_1_1(), "rule__DataMetric__CollectedDataAssignment_1_1");
					put(grammarAccess.getDataMetricAccess().getDataTypeAssignment_1_3(), "rule__DataMetric__DataTypeAssignment_1_3");
					put(grammarAccess.getDataMetricAccess().getArtefactsAssignment_2_1(), "rule__DataMetric__ArtefactsAssignment_2_1");
					put(grammarAccess.getDataMetricAccess().getQuestionnairesAssignment_3_1(), "rule__DataMetric__QuestionnairesAssignment_3_1");
					put(grammarAccess.getCollectedDataAccess().getNameAssignment(), "rule__CollectedData__NameAssignment");
					put(grammarAccess.getQuestionnaireAccess().getNameAssignment_1(), "rule__Questionnaire__NameAssignment_1");
					put(grammarAccess.getQuestionnaireAccess().getRelatesToAssignment_2_1(), "rule__Questionnaire__RelatesToAssignment_2_1");
					put(grammarAccess.getQuestionnaireAccess().getQuestionnaireTypeAssignment_3_1(), "rule__Questionnaire__QuestionnaireTypeAssignment_3_1");
					put(grammarAccess.getQuestionnaireAccess().getQuestionAssignment_5(), "rule__Questionnaire__QuestionAssignment_5");
					put(grammarAccess.getQuestionAccess().getNameAssignment_0(), "rule__Question__NameAssignment_0");
					put(grammarAccess.getQuestionAccess().getDescriptionAssignment_2_1(), "rule__Question__DescriptionAssignment_2_1");
					put(grammarAccess.getQuestionAccess().getTypeAssignment_3_1(), "rule__Question__TypeAssignment_3_1");
					put(grammarAccess.getQuestionAccess().getReqAssignment_4_1(), "rule__Question__ReqAssignment_4_1");
					put(grammarAccess.getQuestionAccess().getAlternativesAssignment_5_1(), "rule__Question__AlternativesAssignment_5_1");
					put(grammarAccess.getAlternativesAccess().getDescriptionAssignment_1(), "rule__Alternatives__DescriptionAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			br.ufrn.dimap.ase.dsl.ui.contentassist.antlr.internal.InternalExpDslv2Parser typedParser = (br.ufrn.dimap.ase.dsl.ui.contentassist.antlr.internal.InternalExpDslv2Parser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public ExpDslv2GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(ExpDslv2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
