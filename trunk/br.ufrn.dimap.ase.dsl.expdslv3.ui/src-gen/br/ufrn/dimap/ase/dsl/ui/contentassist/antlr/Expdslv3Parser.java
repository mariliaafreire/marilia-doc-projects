/*
* generated by Xtext
*/
package br.ufrn.dimap.ase.dsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import br.ufrn.dimap.ase.dsl.services.Expdslv3GrammarAccess;

public class Expdslv3Parser extends AbstractContentAssistParser {
	
	@Inject
	private Expdslv3GrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected br.ufrn.dimap.ase.dsl.ui.contentassist.antlr.internal.InternalExpdslv3Parser createParser() {
		br.ufrn.dimap.ase.dsl.ui.contentassist.antlr.internal.InternalExpdslv3Parser result = new br.ufrn.dimap.ase.dsl.ui.contentassist.antlr.internal.InternalExpdslv3Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAbstractAccess().getAlternatives(), "rule__Abstract__Alternatives");
					put(grammarAccess.getGoalAccess().getAlternatives(), "rule__Goal__Alternatives");
					put(grammarAccess.getDepVariableAccess().getAlternatives_2(), "rule__DepVariable__Alternatives_2");
					put(grammarAccess.getDOEAccess().getAlternatives(), "rule__DOE__Alternatives");
					put(grammarAccess.getScaleTypeAccess().getAlternatives(), "rule__ScaleType__Alternatives");
					put(grammarAccess.getDesignTypeAccess().getAlternatives(), "rule__DesignType__Alternatives");
					put(grammarAccess.getRoleTypeAccess().getAlternatives(), "rule__RoleType__Alternatives");
					put(grammarAccess.getArtefactTypeAccess().getAlternatives(), "rule__ArtefactType__Alternatives");
					put(grammarAccess.getQuestionnaireTypeAccess().getAlternatives(), "rule__QuestionnaireType__Alternatives");
					put(grammarAccess.getAnswerTypeAccess().getAlternatives(), "rule__AnswerType__Alternatives");
					put(grammarAccess.getExperimentElementAccess().getGroup(), "rule__ExperimentElement__Group__0");
					put(grammarAccess.getExperimentElementAccess().getGroup_6(), "rule__ExperimentElement__Group_6__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup(), "rule__ExperimentalDesign__Group__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup_0(), "rule__ExperimentalDesign__Group_0__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup_1(), "rule__ExperimentalDesign__Group_1__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup_2(), "rule__ExperimentalDesign__Group_2__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup_3(), "rule__ExperimentalDesign__Group_3__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup_4(), "rule__ExperimentalDesign__Group_4__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup_5(), "rule__ExperimentalDesign__Group_5__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup_6(), "rule__ExperimentalDesign__Group_6__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup_7(), "rule__ExperimentalDesign__Group_7__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup_8(), "rule__ExperimentalDesign__Group_8__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup_9(), "rule__ExperimentalDesign__Group_9__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup_10(), "rule__ExperimentalDesign__Group_10__0");
					put(grammarAccess.getExperimentalDesignAccess().getGroup_11(), "rule__ExperimentalDesign__Group_11__0");
					put(grammarAccess.getAuthorAccess().getGroup(), "rule__Author__Group__0");
					put(grammarAccess.getStructuredAbstractAccess().getGroup(), "rule__StructuredAbstract__Group__0");
					put(grammarAccess.getStructuredAbstractAccess().getGroup_1(), "rule__StructuredAbstract__Group_1__0");
					put(grammarAccess.getStructuredAbstractAccess().getGroup_2(), "rule__StructuredAbstract__Group_2__0");
					put(grammarAccess.getStructuredAbstractAccess().getGroup_3(), "rule__StructuredAbstract__Group_3__0");
					put(grammarAccess.getStructuredAbstractAccess().getGroup_4(), "rule__StructuredAbstract__Group_4__0");
					put(grammarAccess.getStructuredAbstractAccess().getGroup_5(), "rule__StructuredAbstract__Group_5__0");
					put(grammarAccess.getStructuredAbstractAccess().getGroup_6(), "rule__StructuredAbstract__Group_6__0");
					put(grammarAccess.getSimpleGoalAccess().getGroup(), "rule__SimpleGoal__Group__0");
					put(grammarAccess.getStructuredGoalAccess().getGroup(), "rule__StructuredGoal__Group__0");
					put(grammarAccess.getResearchQuestionAccess().getGroup(), "rule__ResearchQuestion__Group__0");
					put(grammarAccess.getResearchHypothesisAccess().getGroup(), "rule__ResearchHypothesis__Group__0");
					put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
					put(grammarAccess.getVariableAccess().getGroup_2(), "rule__Variable__Group_2__0");
					put(grammarAccess.getVariableAccess().getGroup_3(), "rule__Variable__Group_3__0");
					put(grammarAccess.getDepVariableAccess().getGroup(), "rule__DepVariable__Group__0");
					put(grammarAccess.getDepVariableAccess().getGroup_2_0(), "rule__DepVariable__Group_2_0__0");
					put(grammarAccess.getDepVariableAccess().getGroup_2_1(), "rule__DepVariable__Group_2_1__0");
					put(grammarAccess.getLSAccess().getGroup(), "rule__LS__Group__0");
					put(grammarAccess.getRCBDAccess().getGroup(), "rule__RCBD__Group__0");
					put(grammarAccess.getCRBAccess().getGroup(), "rule__CRB__Group__0");
					put(grammarAccess.getProcessAccess().getGroup(), "rule__Process__Group__0");
					put(grammarAccess.getProcessAccess().getGroup_2(), "rule__Process__Group_2__0");
					put(grammarAccess.getProcessAccess().getGroup_4(), "rule__Process__Group_4__0");
					put(grammarAccess.getTaskAccess().getGroup(), "rule__Task__Group__0");
					put(grammarAccess.getTaskAccess().getGroup_4(), "rule__Task__Group_4__0");
					put(grammarAccess.getTaskAccess().getGroup_5(), "rule__Task__Group_5__0");
					put(grammarAccess.getTaskAccess().getGroup_7(), "rule__Task__Group_7__0");
					put(grammarAccess.getTaskAccess().getGroup_8(), "rule__Task__Group_8__0");
					put(grammarAccess.getArtefactAccess().getGroup(), "rule__Artefact__Group__0");
					put(grammarAccess.getMetricAccess().getGroup(), "rule__Metric__Group__0");
					put(grammarAccess.getMetricAccess().getGroup_2(), "rule__Metric__Group_2__0");
					put(grammarAccess.getQuestionnaireAccess().getGroup(), "rule__Questionnaire__Group__0");
					put(grammarAccess.getQuestionnaireAccess().getGroup_2(), "rule__Questionnaire__Group_2__0");
					put(grammarAccess.getQuestionnaireAccess().getGroup_3(), "rule__Questionnaire__Group_3__0");
					put(grammarAccess.getQuestionAccess().getGroup(), "rule__Question__Group__0");
					put(grammarAccess.getQuestionAccess().getGroup_2(), "rule__Question__Group_2__0");
					put(grammarAccess.getQuestionAccess().getGroup_3(), "rule__Question__Group_3__0");
					put(grammarAccess.getQuestionAccess().getGroup_4(), "rule__Question__Group_4__0");
					put(grammarAccess.getQuestionAccess().getGroup_5(), "rule__Question__Group_5__0");
					put(grammarAccess.getAlternativesAccess().getGroup(), "rule__Alternatives__Group__0");
					put(grammarAccess.getModelAccess().getElementsAssignment(), "rule__Model__ElementsAssignment");
					put(grammarAccess.getExperimentElementAccess().getNameAssignment_1(), "rule__ExperimentElement__NameAssignment_1");
					put(grammarAccess.getExperimentElementAccess().getDescriptionAssignment_2(), "rule__ExperimentElement__DescriptionAssignment_2");
					put(grammarAccess.getExperimentElementAccess().getExperimentsAssignment_4(), "rule__ExperimentElement__ExperimentsAssignment_4");
					put(grammarAccess.getExperimentElementAccess().getProcessAssignment_5(), "rule__ExperimentElement__ProcessAssignment_5");
					put(grammarAccess.getExperimentElementAccess().getQuestionnaireAssignment_6_1(), "rule__ExperimentElement__QuestionnaireAssignment_6_1");
					put(grammarAccess.getExperimentalDesignAccess().getAuthorAssignment_0_2(), "rule__ExperimentalDesign__AuthorAssignment_0_2");
					put(grammarAccess.getExperimentalDesignAccess().getAbstractAssignment_1_2(), "rule__ExperimentalDesign__AbstractAssignment_1_2");
					put(grammarAccess.getExperimentalDesignAccess().getKeywordAssignment_2_2(), "rule__ExperimentalDesign__KeywordAssignment_2_2");
					put(grammarAccess.getExperimentalDesignAccess().getGoalAssignment_3_2(), "rule__ExperimentalDesign__GoalAssignment_3_2");
					put(grammarAccess.getExperimentalDesignAccess().getResearchQuestionAssignment_4_2(), "rule__ExperimentalDesign__ResearchQuestionAssignment_4_2");
					put(grammarAccess.getExperimentalDesignAccess().getResearchHypothesisAssignment_5_2(), "rule__ExperimentalDesign__ResearchHypothesisAssignment_5_2");
					put(grammarAccess.getExperimentalDesignAccess().getVariableAssignment_6_2(), "rule__ExperimentalDesign__VariableAssignment_6_2");
					put(grammarAccess.getExperimentalDesignAccess().getDepVarAssignment_7_2(), "rule__ExperimentalDesign__DepVarAssignment_7_2");
					put(grammarAccess.getExperimentalDesignAccess().getFactorAssignment_8_2(), "rule__ExperimentalDesign__FactorAssignment_8_2");
					put(grammarAccess.getExperimentalDesignAccess().getTypeAssignment_9_2(), "rule__ExperimentalDesign__TypeAssignment_9_2");
					put(grammarAccess.getExperimentalDesignAccess().getDoeAssignment_9_4(), "rule__ExperimentalDesign__DoeAssignment_9_4");
					put(grammarAccess.getExperimentalDesignAccess().getParameterAssignment_10_2(), "rule__ExperimentalDesign__ParameterAssignment_10_2");
					put(grammarAccess.getExperimentalDesignAccess().getReplicationAssignment_11_1(), "rule__ExperimentalDesign__ReplicationAssignment_11_1");
					put(grammarAccess.getAuthorAccess().getIdentifierAssignment_0(), "rule__Author__IdentifierAssignment_0");
					put(grammarAccess.getAuthorAccess().getNameAssignment_1(), "rule__Author__NameAssignment_1");
					put(grammarAccess.getSimpleAbstractAccess().getDescriptionAssignment(), "rule__SimpleAbstract__DescriptionAssignment");
					put(grammarAccess.getStructuredAbstractAccess().getBackgroundAssignment_1_1(), "rule__StructuredAbstract__BackgroundAssignment_1_1");
					put(grammarAccess.getStructuredAbstractAccess().getObjectiveAssignment_2_1(), "rule__StructuredAbstract__ObjectiveAssignment_2_1");
					put(grammarAccess.getStructuredAbstractAccess().getMethodsAssignment_3_1(), "rule__StructuredAbstract__MethodsAssignment_3_1");
					put(grammarAccess.getStructuredAbstractAccess().getResultsAssignment_4_1(), "rule__StructuredAbstract__ResultsAssignment_4_1");
					put(grammarAccess.getStructuredAbstractAccess().getLimitationsAssignment_5_1(), "rule__StructuredAbstract__LimitationsAssignment_5_1");
					put(grammarAccess.getStructuredAbstractAccess().getConclusionsAssignment_6_1(), "rule__StructuredAbstract__ConclusionsAssignment_6_1");
					put(grammarAccess.getKeywordAccess().getDescriptionAssignment(), "rule__Keyword__DescriptionAssignment");
					put(grammarAccess.getSimpleGoalAccess().getNameAssignment_0(), "rule__SimpleGoal__NameAssignment_0");
					put(grammarAccess.getSimpleGoalAccess().getDescriptionAssignment_1(), "rule__SimpleGoal__DescriptionAssignment_1");
					put(grammarAccess.getStructuredGoalAccess().getObjectAssignment_1(), "rule__StructuredGoal__ObjectAssignment_1");
					put(grammarAccess.getStructuredGoalAccess().getTechniqueAssignment_3(), "rule__StructuredGoal__TechniqueAssignment_3");
					put(grammarAccess.getStructuredGoalAccess().getQualityAssignment_5(), "rule__StructuredGoal__QualityAssignment_5");
					put(grammarAccess.getStructuredGoalAccess().getPtViewAssignment_7(), "rule__StructuredGoal__PtViewAssignment_7");
					put(grammarAccess.getStructuredGoalAccess().getContextOfAssignment_9(), "rule__StructuredGoal__ContextOfAssignment_9");
					put(grammarAccess.getResearchQuestionAccess().getNameAssignment_0(), "rule__ResearchQuestion__NameAssignment_0");
					put(grammarAccess.getResearchQuestionAccess().getDescriptionAssignment_1(), "rule__ResearchQuestion__DescriptionAssignment_1");
					put(grammarAccess.getResearchQuestionAccess().getGoalAssignment_3(), "rule__ResearchQuestion__GoalAssignment_3");
					put(grammarAccess.getResearchHypothesisAccess().getNameAssignment_0(), "rule__ResearchHypothesis__NameAssignment_0");
					put(grammarAccess.getResearchHypothesisAccess().getDescriptionAssignment_1(), "rule__ResearchHypothesis__DescriptionAssignment_1");
					put(grammarAccess.getResearchHypothesisAccess().getGoalAssignment_3(), "rule__ResearchHypothesis__GoalAssignment_3");
					put(grammarAccess.getVariableAccess().getNameAssignment_0(), "rule__Variable__NameAssignment_0");
					put(grammarAccess.getVariableAccess().getDescriptionAssignment_1(), "rule__Variable__DescriptionAssignment_1");
					put(grammarAccess.getVariableAccess().getScaleTypeAssignment_2_1(), "rule__Variable__ScaleTypeAssignment_2_1");
					put(grammarAccess.getVariableAccess().getRangeAssignment_3_2(), "rule__Variable__RangeAssignment_3_2");
					put(grammarAccess.getRangeAccess().getNameAssignment(), "rule__Range__NameAssignment");
					put(grammarAccess.getDepVariableAccess().getVariableAssignment_0(), "rule__DepVariable__VariableAssignment_0");
					put(grammarAccess.getDepVariableAccess().getRqAssignment_2_0_1(), "rule__DepVariable__RqAssignment_2_0_1");
					put(grammarAccess.getDepVariableAccess().getRhAssignment_2_1_1(), "rule__DepVariable__RhAssignment_2_1_1");
					put(grammarAccess.getFactorAccess().getNameAssignment(), "rule__Factor__NameAssignment");
					put(grammarAccess.getLSAccess().getColAssignment_2(), "rule__LS__ColAssignment_2");
					put(grammarAccess.getLSAccess().getRowAssignment_5(), "rule__LS__RowAssignment_5");
					put(grammarAccess.getLSAccess().getTreatmentAssignment_8(), "rule__LS__TreatmentAssignment_8");
					put(grammarAccess.getRCBDAccess().getBlockVariableAssignment_2(), "rule__RCBD__BlockVariableAssignment_2");
					put(grammarAccess.getRCBDAccess().getTreatmentAssignment_5(), "rule__RCBD__TreatmentAssignment_5");
					put(grammarAccess.getCRBAccess().getTreatmentAssignment_2(), "rule__CRB__TreatmentAssignment_2");
					put(grammarAccess.getParameterAccess().getVariableAssignment(), "rule__Parameter__VariableAssignment");
					put(grammarAccess.getProcessAccess().getNameAssignment_1(), "rule__Process__NameAssignment_1");
					put(grammarAccess.getProcessAccess().getTreatmentAssignment_2_1(), "rule__Process__TreatmentAssignment_2_1");
					put(grammarAccess.getProcessAccess().getRoleAssignment_4_1(), "rule__Process__RoleAssignment_4_1");
					put(grammarAccess.getProcessAccess().getTaskAssignment_5(), "rule__Process__TaskAssignment_5");
					put(grammarAccess.getTaskAccess().getNameAssignment_1(), "rule__Task__NameAssignment_1");
					put(grammarAccess.getTaskAccess().getDescriptionAssignment_3(), "rule__Task__DescriptionAssignment_3");
					put(grammarAccess.getTaskAccess().getNextAssignment_4_1(), "rule__Task__NextAssignment_4_1");
					put(grammarAccess.getTaskAccess().getRoleAssignment_5_1(), "rule__Task__RoleAssignment_5_1");
					put(grammarAccess.getTaskAccess().getArtefactsAssignment_7_1(), "rule__Task__ArtefactsAssignment_7_1");
					put(grammarAccess.getTaskAccess().getMetricAssignment_8_1(), "rule__Task__MetricAssignment_8_1");
					put(grammarAccess.getArtefactAccess().getNameAssignment_0(), "rule__Artefact__NameAssignment_0");
					put(grammarAccess.getArtefactAccess().getDescriptionAssignment_2(), "rule__Artefact__DescriptionAssignment_2");
					put(grammarAccess.getArtefactAccess().getTypeAssignment_4(), "rule__Artefact__TypeAssignment_4");
					put(grammarAccess.getMetricAccess().getNameAssignment_0(), "rule__Metric__NameAssignment_0");
					put(grammarAccess.getMetricAccess().getTypeAssignment_1(), "rule__Metric__TypeAssignment_1");
					put(grammarAccess.getMetricAccess().getVarnameAssignment_2_1(), "rule__Metric__VarnameAssignment_2_1");
					put(grammarAccess.getQuestionnaireAccess().getNameAssignment_1(), "rule__Questionnaire__NameAssignment_1");
					put(grammarAccess.getQuestionnaireAccess().getRelatesToAssignment_2_1(), "rule__Questionnaire__RelatesToAssignment_2_1");
					put(grammarAccess.getQuestionnaireAccess().getQuestionnaireTypeAssignment_3_1(), "rule__Questionnaire__QuestionnaireTypeAssignment_3_1");
					put(grammarAccess.getQuestionnaireAccess().getQuestionAssignment_5(), "rule__Questionnaire__QuestionAssignment_5");
					put(grammarAccess.getQuestionAccess().getNameAssignment_0(), "rule__Question__NameAssignment_0");
					put(grammarAccess.getQuestionAccess().getDescriptionAssignment_2_1(), "rule__Question__DescriptionAssignment_2_1");
					put(grammarAccess.getQuestionAccess().getTypeAssignment_3_1(), "rule__Question__TypeAssignment_3_1");
					put(grammarAccess.getQuestionAccess().getReqAssignment_4_1(), "rule__Question__ReqAssignment_4_1");
					put(grammarAccess.getQuestionAccess().getAlternativesAssignment_5_1(), "rule__Question__AlternativesAssignment_5_1");
					put(grammarAccess.getAlternativesAccess().getDescriptionAssignment_1(), "rule__Alternatives__DescriptionAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			br.ufrn.dimap.ase.dsl.ui.contentassist.antlr.internal.InternalExpdslv3Parser typedParser = (br.ufrn.dimap.ase.dsl.ui.contentassist.antlr.internal.InternalExpdslv3Parser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public Expdslv3GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(Expdslv3GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
